{
  "api/dosymep.SimpleServices.IAttachableService.html": {
    "href": "api/dosymep.SimpleServices.IAttachableService.html",
    "title": "Interface IAttachableService | dosymep.SimpleServices",
    "keywords": "Interface IAttachableService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Интерфейс прикрепления сервиса. public interface IAttachableService Properties AllowAttach Разрешение прикрепления. true - разрешено, false - запрещено. bool AllowAttach { get; } Property Value bool Remarks При запрете прикрепления, прикреплении не активируется и пропускается. AssociatedObject Ассоциированный объект с сервисом. DependencyObject AssociatedObject { get; } Property Value DependencyObject IsAttached true - если прикреплен, иначе false. bool IsAttached { get; } Property Value bool Methods Attach(DependencyObject) Прикрепление сервиса. void Attach(DependencyObject dependencyObject) Parameters dependencyObject DependencyObject Объект с которым прикрепляется сервис. Detach() Открепление сервиса. void Detach()"
  },
  "api/dosymep.SimpleServices.IDispatcherService.html": {
    "href": "api/dosymep.SimpleServices.IDispatcherService.html",
    "title": "Interface IDispatcherService | dosymep.SimpleServices",
    "keywords": "Interface IDispatcherService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Предоставляет доступ к Dispatcher public interface IDispatcherService Methods BeginInvoke(Action) Запускает асинхронно указанный делегат. Task BeginInvoke(Action action) Parameters action Action Выполняемый делегат. Returns Task Invoke(Action) Запускает указанный делегат. void Invoke(Action action) Parameters action Action Выполняемый делегат."
  },
  "api/dosymep.SimpleServices.IFileDialogServiceBase.html": {
    "href": "api/dosymep.SimpleServices.IFileDialogServiceBase.html",
    "title": "Interface IFileDialogServiceBase | dosymep.SimpleServices",
    "keywords": "Interface IFileDialogServiceBase Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Предоставляет методы и свойства для конфигурации стандартного диалога. public interface IFileDialogServiceBase Properties AddExtension Возвращает или устанавливает значение признака автоматической установки расширения к имени файла. bool AddExtension { get; set; } Property Value bool AutoUpgradeEnabled Возвращает или устанавливает значение признака автоматической смены внешнего вида и поведения. bool AutoUpgradeEnabled { get; set; } Property Value bool CheckFileExists Возвращает или устанавливает признак отображения предупреждения, когда пользователь указывает не существующее имя файла. bool CheckFileExists { get; set; } Property Value bool CheckPathExists Возвращает или устанавливает признак отображения предупреждения, когда пользователь указывает не существующий путь. bool CheckPathExists { get; set; } Property Value bool DereferenceLinks Возвращает или устанавливает признак возвращения расположения файла, на который ссылается ярлык или возвращает расположения ярлыка. bool DereferenceLinks { get; set; } Property Value bool Filter Возвращает или устанавливает строку фильтра, указывающую на параметры доступные в поле \"Тип файлов\". string Filter { get; set; } Property Value string FilterIndex Возвращает или устанавливает индекс параметра фильтрации. int FilterIndex { get; set; } Property Value int InitialDirectory Возвращает или устанавливает исходную папку. string InitialDirectory { get; set; } Property Value string RestoreDirectory Возвращает или устанавливает признак запоминания предыдущего каталога при повторном отображении. bool RestoreDirectory { get; set; } Property Value bool ShowHelp Возвращает или устанавливает признак отображения кнопки \"Справка\". bool ShowHelp { get; set; } Property Value bool SupportMultiDottedExtensions Возвращает или устанавливает признак отображения и сохранения файлов с несколькими расширениями. bool SupportMultiDottedExtensions { get; set; } Property Value bool Title Возвращает или устанавливает отображаемый заголовок. string Title { get; set; } Property Value string ValidateNames Возвращает или устанавливает признак принятия только допустимых имен файлов Win32. bool ValidateNames { get; set; } Property Value bool Methods Reset() Сбрасывает все свойства до значений по умолчанию. void Reset()"
  },
  "api/dosymep.SimpleServices.ILanguageService.html": {
    "href": "api/dosymep.SimpleServices.ILanguageService.html",
    "title": "Interface ILanguageService | dosymep.SimpleServices",
    "keywords": "Interface ILanguageService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Предоставляет доступ к языку интерфейса. public interface ILanguageService Properties HostLanguage Используемый язык. CultureInfo HostLanguage { get; } Property Value CultureInfo"
  },
  "api/dosymep.SimpleServices.ILocalizationService.html": {
    "href": "api/dosymep.SimpleServices.ILocalizationService.html",
    "title": "Interface ILocalizationService | dosymep.SimpleServices",
    "keywords": "Interface ILocalizationService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Сервис локализации предоставляет простой интерфейс для получения локализированных строк. public interface ILocalizationService Methods GetLocalizedString(string) Возвращает локализированную строку. string GetLocalizedString(string name) Parameters name string Наименование локализированной строки. Returns string Возвращает локализированную строку. Если строка не была найдена возвращает null. GetLocalizedString(string, params object[]) Возвращает форматированную локализированную строку. string GetLocalizedString(string name, params object[] args) Parameters name string Наименование локализированной строки. args object[] Параметры форматирования локализированной строки. Returns string Возвращает форматированную локализированную строку. Если строка не была найдена возвращает null. SetLocalization(CultureInfo, FrameworkElement) Устанавливает ресурсы локализации для интерфейса. void SetLocalization(CultureInfo cultureInfo, FrameworkElement frameworkElement) Parameters cultureInfo CultureInfo Применяемые языковые стандарты. frameworkElement FrameworkElement Элемент интерфейса WPF."
  },
  "api/dosymep.SimpleServices.ILoggerService.html": {
    "href": "api/dosymep.SimpleServices.ILoggerService.html",
    "title": "Interface ILoggerService | dosymep.SimpleServices",
    "keywords": "Interface ILoggerService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll public interface ILoggerService Methods Debug(Exception, string) void Debug(Exception exception, string messageTemplate) Parameters exception Exception messageTemplate string Debug(Exception, string, params object[]) void Debug(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception messageTemplate string propertyValues object[] Debug(string) void Debug(string messageTemplate) Parameters messageTemplate string Debug(string, params object[]) void Debug(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string propertyValues object[] Debug<T>(Exception, string, T) void Debug<T>(Exception exception, string messageTemplate, T propertyValue) Parameters exception Exception messageTemplate string propertyValue T Type Parameters T Debug<T>(string, T) void Debug<T>(string messageTemplate, T propertyValue) Parameters messageTemplate string propertyValue T Type Parameters T Debug<T0, T1>(Exception, string, T0, T1) void Debug<T0, T1>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Debug<T0, T1>(string, T0, T1) void Debug<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Debug<T0, T1, T2>(Exception, string, T0, T1, T2) void Debug<T0, T1, T2>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2 Debug<T0, T1, T2>(string, T0, T1, T2) void Debug<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2 Error(Exception, string) void Error(Exception exception, string messageTemplate) Parameters exception Exception messageTemplate string Error(Exception, string, params object[]) void Error(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception messageTemplate string propertyValues object[] Error(string) void Error(string messageTemplate) Parameters messageTemplate string Error(string, params object[]) void Error(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string propertyValues object[] Error<T>(Exception, string, T) void Error<T>(Exception exception, string messageTemplate, T propertyValue) Parameters exception Exception messageTemplate string propertyValue T Type Parameters T Error<T>(string, T) void Error<T>(string messageTemplate, T propertyValue) Parameters messageTemplate string propertyValue T Type Parameters T Error<T0, T1>(Exception, string, T0, T1) void Error<T0, T1>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Error<T0, T1>(string, T0, T1) void Error<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Error<T0, T1, T2>(Exception, string, T0, T1, T2) void Error<T0, T1, T2>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2 Error<T0, T1, T2>(string, T0, T1, T2) void Error<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2 Fatal(Exception, string) void Fatal(Exception exception, string messageTemplate) Parameters exception Exception messageTemplate string Fatal(Exception, string, params object[]) void Fatal(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception messageTemplate string propertyValues object[] Fatal(string) void Fatal(string messageTemplate) Parameters messageTemplate string Fatal(string, params object[]) void Fatal(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string propertyValues object[] Fatal<T>(Exception, string, T) void Fatal<T>(Exception exception, string messageTemplate, T propertyValue) Parameters exception Exception messageTemplate string propertyValue T Type Parameters T Fatal<T>(string, T) void Fatal<T>(string messageTemplate, T propertyValue) Parameters messageTemplate string propertyValue T Type Parameters T Fatal<T0, T1>(Exception, string, T0, T1) void Fatal<T0, T1>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Fatal<T0, T1>(string, T0, T1) void Fatal<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Fatal<T0, T1, T2>(Exception, string, T0, T1, T2) void Fatal<T0, T1, T2>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2 Fatal<T0, T1, T2>(string, T0, T1, T2) void Fatal<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2 ForPluginContext(string) ILoggerService ForPluginContext(string pluginContextName) Parameters pluginContextName string Returns ILoggerService Information(Exception, string) void Information(Exception exception, string messageTemplate) Parameters exception Exception messageTemplate string Information(Exception, string, params object[]) void Information(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception messageTemplate string propertyValues object[] Information(string) void Information(string messageTemplate) Parameters messageTemplate string Information(string, params object[]) void Information(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string propertyValues object[] Information<T>(Exception, string, T) void Information<T>(Exception exception, string messageTemplate, T propertyValue) Parameters exception Exception messageTemplate string propertyValue T Type Parameters T Information<T>(string, T) void Information<T>(string messageTemplate, T propertyValue) Parameters messageTemplate string propertyValue T Type Parameters T Information<T0, T1>(Exception, string, T0, T1) void Information<T0, T1>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Information<T0, T1>(string, T0, T1) void Information<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Information<T0, T1, T2>(Exception, string, T0, T1, T2) void Information<T0, T1, T2>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2 Information<T0, T1, T2>(string, T0, T1, T2) void Information<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2 Verbose(Exception, string) void Verbose(Exception exception, string messageTemplate) Parameters exception Exception messageTemplate string Verbose(Exception, string, params object[]) void Verbose(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception messageTemplate string propertyValues object[] Verbose(string) void Verbose(string messageTemplate) Parameters messageTemplate string Verbose(string, params object[]) void Verbose(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string propertyValues object[] Verbose<T>(Exception, string, T) void Verbose<T>(Exception exception, string messageTemplate, T propertyValue) Parameters exception Exception messageTemplate string propertyValue T Type Parameters T Verbose<T>(string, T) void Verbose<T>(string messageTemplate, T propertyValue) Parameters messageTemplate string propertyValue T Type Parameters T Verbose<T0, T1>(Exception, string, T0, T1) void Verbose<T0, T1>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Verbose<T0, T1>(string, T0, T1) void Verbose<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Verbose<T0, T1, T2>(Exception, string, T0, T1, T2) void Verbose<T0, T1, T2>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2 Verbose<T0, T1, T2>(string, T0, T1, T2) void Verbose<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2 Warning(Exception, string) void Warning(Exception exception, string messageTemplate) Parameters exception Exception messageTemplate string Warning(Exception, string, params object[]) void Warning(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception messageTemplate string propertyValues object[] Warning(string) void Warning(string messageTemplate) Parameters messageTemplate string Warning(string, params object[]) void Warning(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string propertyValues object[] Warning<T>(Exception, string, T) void Warning<T>(Exception exception, string messageTemplate, T propertyValue) Parameters exception Exception messageTemplate string propertyValue T Type Parameters T Warning<T>(string, T) void Warning<T>(string messageTemplate, T propertyValue) Parameters messageTemplate string propertyValue T Type Parameters T Warning<T0, T1>(Exception, string, T0, T1) void Warning<T0, T1>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Warning<T0, T1>(string, T0, T1) void Warning<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 Type Parameters T0 T1 Warning<T0, T1, T2>(Exception, string, T0, T1, T2) void Warning<T0, T1, T2>(Exception exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters exception Exception messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2 Warning<T0, T1, T2>(string, T0, T1, T2) void Warning<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2) Parameters messageTemplate string propertyValue0 T0 propertyValue1 T1 propertyValue2 T2 Type Parameters T0 T1 T2"
  },
  "api/dosymep.SimpleServices.IMessageBoxService.html": {
    "href": "api/dosymep.SimpleServices.IMessageBoxService.html",
    "title": "Interface IMessageBoxService | dosymep.SimpleServices",
    "keywords": "Interface IMessageBoxService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Предоставляет методы для показа окна сообщений. public interface IMessageBoxService Extension Methods MessageBoxServiceExtensions.Show(IMessageBoxService, string) MessageBoxServiceExtensions.Show(IMessageBoxService, string, string) MessageBoxServiceExtensions.Show(IMessageBoxService, string, string, MessageBoxButton) MessageBoxServiceExtensions.Show(IMessageBoxService, string, string, MessageBoxButton, MessageBoxImage) Methods Show(string, string, MessageBoxButton, MessageBoxImage, MessageBoxResult) Показывает сообщение с указанными параметрами. MessageBoxResult Show(string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon, MessageBoxResult defaultResult) Parameters messageBoxText string Текст отображаемый в окне сообщения. caption string Заголовок окна сообщения. button MessageBoxButton Кнопки отображаемые в окне сообщения. icon MessageBoxImage Иконка отображаемая в окне сообщения. defaultResult MessageBoxResult Выбираемая кнопка по умолчанию при показе окна сообщения. Returns MessageBoxResult Возвращает кнопку, на которую кликнул пользователь."
  },
  "api/dosymep.SimpleServices.INotification.html": {
    "href": "api/dosymep.SimpleServices.INotification.html",
    "title": "Interface INotification | dosymep.SimpleServices",
    "keywords": "Interface INotification Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Интерфейс уведомления. public interface INotification Methods Hide() Скрыть уведомление. void Hide() ShowAsync() Показать уведомление. Task<bool?> ShowAsync() Returns Task<bool?> Возвращает результат показа уведомления. ShowAsync(int) Показать уведомление. Task<bool?> ShowAsync(int millisecond) Parameters millisecond int Время отображения уведомления, указывается в миллисекундах. Returns Task<bool?> Возвращает результат показа уведомления. ShowAsync(TimeSpan) Показать уведомление. Task<bool?> ShowAsync(TimeSpan interval) Parameters interval TimeSpan Время отображения уведомления. Returns Task<bool?> Возвращает результат показа уведомления."
  },
  "api/dosymep.SimpleServices.INotificationService.html": {
    "href": "api/dosymep.SimpleServices.INotificationService.html",
    "title": "Interface INotificationService | dosymep.SimpleServices",
    "keywords": "Interface INotificationService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Предоставляет методы для показа уведомлений. public interface INotificationService Methods CreateFatalNotification(string, string, string, ImageSource) Создает и возвращает предустановленное уведомление предупреждения. INotification CreateFatalNotification(string title, string body, string author = null, ImageSource imageSource = null) Parameters title string Заголовок уведомления. body string Текст отображаемый в уведомлении. author string Автор плагина. imageSource ImageSource Изображение отображаемое в уведомлении. Returns INotification Возвращает созданное уведомление. CreateNotification(string, string, string, string, ImageSource) Создает и возвращает предустановленное уведомление. INotification CreateNotification(string title, string body, string footer = null, string author = null, ImageSource imageSource = null) Parameters title string Заголовок уведомления. body string Текст отображаемый в уведомлении. footer string Отображаемый текст снизу уведомления. author string Автор плагина. imageSource ImageSource Изображение отображаемое в уведомлении. Returns INotification Возвращает созданное уведомление. CreateWarningNotification(string, string, string, ImageSource) Создает и возвращает предустановленное уведомление ошибки. INotification CreateWarningNotification(string title, string body, string author = null, ImageSource imageSource = null) Parameters title string Заголовок уведомления. body string Текст отображаемый в уведомлении. author string Автор плагина. imageSource ImageSource Изображение отображаемое в уведомлении. Returns INotification Возвращает созданное уведомление."
  },
  "api/dosymep.SimpleServices.IOpenDialogServiceBase.html": {
    "href": "api/dosymep.SimpleServices.IOpenDialogServiceBase.html",
    "title": "Interface IOpenDialogServiceBase | dosymep.SimpleServices",
    "keywords": "Interface IOpenDialogServiceBase Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Предоставляет общие члены IOpenFileDialogService и IOpenFolderDialogService. public interface IOpenDialogServiceBase Properties Multiselect Возвращает или устанавливает признак выбора нескольких файлов. bool Multiselect { get; set; } Property Value bool Methods ShowDialog() Показывает диалог выбора. bool ShowDialog() Returns bool Возвращает результат true - если пользователь кликнул OK, иначе возвращает false. ShowDialog(string) Показывает диалог выбора. bool ShowDialog(string directoryName) Parameters directoryName string Устанавливает исходную папку. Returns bool Возвращает результат true - если пользователь кликнул OK, иначе возвращает false."
  },
  "api/dosymep.SimpleServices.IOpenFileDialogService.html": {
    "href": "api/dosymep.SimpleServices.IOpenFileDialogService.html",
    "title": "Interface IOpenFileDialogService | dosymep.SimpleServices",
    "keywords": "Interface IOpenFileDialogService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Предоставляет методы для просмотра и открытия файлов. public interface IOpenFileDialogService : IOpenDialogServiceBase, IFileDialogServiceBase Inherited Members IOpenDialogServiceBase.ShowDialog() IOpenDialogServiceBase.ShowDialog(string) IOpenDialogServiceBase.Multiselect IFileDialogServiceBase.Reset() IFileDialogServiceBase.AddExtension IFileDialogServiceBase.AutoUpgradeEnabled IFileDialogServiceBase.CheckFileExists IFileDialogServiceBase.CheckPathExists IFileDialogServiceBase.ValidateNames IFileDialogServiceBase.DereferenceLinks IFileDialogServiceBase.RestoreDirectory IFileDialogServiceBase.ShowHelp IFileDialogServiceBase.SupportMultiDottedExtensions IFileDialogServiceBase.FilterIndex IFileDialogServiceBase.Title IFileDialogServiceBase.Filter IFileDialogServiceBase.InitialDirectory Properties File Возвращает объект определяющий файл выбранный в диалоговом окне. FileInfo File { get; } Property Value FileInfo Files Возвращает коллекцию указывающую на все файлы выбранные в диалоговом окне. IEnumerable<FileInfo> Files { get; } Property Value IEnumerable<FileInfo>"
  },
  "api/dosymep.SimpleServices.IOpenFolderDialogService.html": {
    "href": "api/dosymep.SimpleServices.IOpenFolderDialogService.html",
    "title": "Interface IOpenFolderDialogService | dosymep.SimpleServices",
    "keywords": "Interface IOpenFolderDialogService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Предоставляет методы для открытия папок. public interface IOpenFolderDialogService : IOpenDialogServiceBase, IFileDialogServiceBase Inherited Members IOpenDialogServiceBase.ShowDialog() IOpenDialogServiceBase.ShowDialog(string) IOpenDialogServiceBase.Multiselect IFileDialogServiceBase.Reset() IFileDialogServiceBase.AddExtension IFileDialogServiceBase.AutoUpgradeEnabled IFileDialogServiceBase.CheckFileExists IFileDialogServiceBase.CheckPathExists IFileDialogServiceBase.ValidateNames IFileDialogServiceBase.DereferenceLinks IFileDialogServiceBase.RestoreDirectory IFileDialogServiceBase.ShowHelp IFileDialogServiceBase.SupportMultiDottedExtensions IFileDialogServiceBase.FilterIndex IFileDialogServiceBase.Title IFileDialogServiceBase.Filter IFileDialogServiceBase.InitialDirectory Properties Folder Возвращает объект определяющий папку выбранную в диалоговом окне. DirectoryInfo Folder { get; } Property Value DirectoryInfo Folders Возвращает коллекцию указывающую на все папки выбранные в диалоговом окне. IEnumerable<DirectoryInfo> Folders { get; } Property Value IEnumerable<DirectoryInfo>"
  },
  "api/dosymep.SimpleServices.IPlatformProfileService-1.html": {
    "href": "api/dosymep.SimpleServices.IPlatformProfileService-1.html",
    "title": "Interface IPlatformProfileService<TSpaceProfile> | dosymep.SimpleServices",
    "keywords": "Interface IPlatformProfileService<TSpaceProfile> Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Интерфейс предоставляет доступ к настройкам плагинов. public interface IPlatformProfileService<TSpaceProfile> : IPlatformProfileService where TSpaceProfile : ProfileSpace Type Parameters TSpaceProfile Класс пространства конфигурации. Inherited Members IPlatformProfileService.User IPlatformProfileService.System IPlatformProfileService.Organization Methods GetPluginSettings<T>(string) Возвращает экземпляр настроек плагина. T GetPluginSettings<T>(string pluginName) Parameters pluginName string Наименование плагина. Returns T Возвращает экземпляр настроек плагина. Type Parameters T Тип настроек плагина. GetPluginSettings<T>(string, string) Возвращает экземпляр настроек плагина. T GetPluginSettings<T>(string pluginName, string settingsName) Parameters pluginName string Наименование плагина. settingsName string Наименование настроек. Returns T Возвращает экземпляр настроек плагина. Type Parameters T Тип настроек плагина. SavePluginSettings<T>(T, string) Сохраняет настройки плагина. void SavePluginSettings<T>(T settings, string pluginName) Parameters settings T Настройки плагина. pluginName string Наименование плагина. Type Parameters T Тип настроек плагина. SavePluginSettings<T>(T, string, string) Сохраняет настройки плагина. void SavePluginSettings<T>(T settings, string pluginName, string settingsName) Parameters settings T Настройки плагина. pluginName string Наименование плагина. settingsName string Наименование настроек. Type Parameters T Тип настроек плагина."
  },
  "api/dosymep.SimpleServices.IPlatformProfileService.html": {
    "href": "api/dosymep.SimpleServices.IPlatformProfileService.html",
    "title": "Interface IPlatformProfileService | dosymep.SimpleServices",
    "keywords": "Interface IPlatformProfileService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Интерфейс сервиса профилей. public interface IPlatformProfileService Properties Organization Профиль организации IProfileInstance Organization { get; } Property Value IProfileInstance System Профиль системы. IProfileInstance System { get; } Property Value IProfileInstance User Профиль пользователя. IProfileInstance User { get; } Property Value IProfileInstance"
  },
  "api/dosymep.SimpleServices.IProgressDialogFactory.html": {
    "href": "api/dosymep.SimpleServices.IProgressDialogFactory.html",
    "title": "Interface IProgressDialogFactory | dosymep.SimpleServices",
    "keywords": "Interface IProgressDialogFactory Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Фабрика создания сервиса прогресс диалога. public interface IProgressDialogFactory Methods CreateDialog() Создает сервис прогресс диалога. IProgressDialogService CreateDialog() Returns IProgressDialogService Возвращает новый экземпляр сервиса прогресс диалога."
  },
  "api/dosymep.SimpleServices.IProgressDialogService.html": {
    "href": "api/dosymep.SimpleServices.IProgressDialogService.html",
    "title": "Interface IProgressDialogService | dosymep.SimpleServices",
    "keywords": "Interface IProgressDialogService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Интерфейс прогресс диалога. public interface IProgressDialogService : IDisposable Inherited Members IDisposable.Dispose() Properties DisplayTitleFormat Строка форматирования отображения. string DisplayTitleFormat { get; set; } Property Value string Indeterminate Указывает будет ли прогресс бар неопределенным bool Indeterminate { get; set; } Property Value bool MaxValue Максимальное значение прогресса. int MaxValue { get; set; } Property Value int StepValue Шаг обновления значение прогресса. int StepValue { get; set; } Property Value int Methods Close() Закрывает диалог прогресса. void Close() CreateAsyncProgress() Создает класс прогресса. IProgress<int> CreateAsyncProgress() Returns IProgress<int> Возвращает прогресс. CreateCancellationToken() Возвращает токен отмены. CancellationToken CreateCancellationToken() Returns CancellationToken Возвращает токен отмены. CreateProgress() Создает класс прогресса. IProgress<int> CreateProgress() Returns IProgress<int> Возвращает прогресс. Show() Открывает диалог прогресса не в модальном режиме. void Show() ShowDialog() Открывает диалог прогресса в модальном режиме. void ShowDialog()"
  },
  "api/dosymep.SimpleServices.IRootWindowService.html": {
    "href": "api/dosymep.SimpleServices.IRootWindowService.html",
    "title": "Interface IRootWindowService | dosymep.SimpleServices",
    "keywords": "Interface IRootWindowService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Интерфейс рабочего окна public interface IRootWindowService Properties RootWindow Текущее корневое окно. Window RootWindow { get; set; } Property Value Window"
  },
  "api/dosymep.SimpleServices.ISaveFileDialogService.html": {
    "href": "api/dosymep.SimpleServices.ISaveFileDialogService.html",
    "title": "Interface ISaveFileDialogService | dosymep.SimpleServices",
    "keywords": "Interface ISaveFileDialogService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Предоставляет методы для сохранения данных в файл. public interface ISaveFileDialogService : IFileDialogServiceBase Inherited Members IFileDialogServiceBase.Reset() IFileDialogServiceBase.AddExtension IFileDialogServiceBase.AutoUpgradeEnabled IFileDialogServiceBase.CheckFileExists IFileDialogServiceBase.CheckPathExists IFileDialogServiceBase.ValidateNames IFileDialogServiceBase.DereferenceLinks IFileDialogServiceBase.RestoreDirectory IFileDialogServiceBase.ShowHelp IFileDialogServiceBase.SupportMultiDottedExtensions IFileDialogServiceBase.FilterIndex IFileDialogServiceBase.Title IFileDialogServiceBase.Filter IFileDialogServiceBase.InitialDirectory Properties DefaultExt Расширение сохраняемого файла по умолчанию. string DefaultExt { get; set; } Property Value string DefaultFileName Наименование сохраняемого файла по умолчанию. string DefaultFileName { get; set; } Property Value string File Возвращает объект определяющий файл выбранный в диалоговом окне. FileInfo File { get; } Property Value FileInfo Methods ShowDialog(string, string) Показывает диалог сохранения файла. bool ShowDialog(string directoryName, string fileName) Parameters directoryName string Устанавливает исходную папку. fileName string Наименование файла. Returns bool Возвращает результат true - если пользователь кликнул OK, иначе возвращает false."
  },
  "api/dosymep.SimpleServices.ISerializationService.html": {
    "href": "api/dosymep.SimpleServices.ISerializationService.html",
    "title": "Interface ISerializationService | dosymep.SimpleServices",
    "keywords": "Interface ISerializationService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Сервис сериализации. public interface ISerializationService Properties FileExtension Расширение файла при сериализации в файл. string FileExtension { get; } Property Value string Methods Deserialize<T>(string) Десериализует строку в объект. T Deserialize<T>(string text) Parameters text string Строка десериализуемого объекта. Returns T Возвращает экземпляр десериализованного объекта. Type Parameters T Тип результата десериализации. Serialize<T>(T) Сериализует объект в строку. string Serialize<T>(T @object) Parameters object T Экземпляр объекта сериализации. Returns string Возвращает строковое значение сериализованного объекта. Type Parameters T Тип объекта сериализации."
  },
  "api/dosymep.SimpleServices.IUIThemeService.html": {
    "href": "api/dosymep.SimpleServices.IUIThemeService.html",
    "title": "Interface IUIThemeService | dosymep.SimpleServices",
    "keywords": "Interface IUIThemeService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Предоставляет доступ к теме интерфейса. public interface IUIThemeService Properties HostTheme Текущая используемая тема. UIThemes HostTheme { get; } Property Value UIThemes Events UIThemeChanged Событие возникающее при изменении темы. event Action<UIThemes> UIThemeChanged Event Type Action<UIThemes>"
  },
  "api/dosymep.SimpleServices.IUIThemeUpdaterService.html": {
    "href": "api/dosymep.SimpleServices.IUIThemeUpdaterService.html",
    "title": "Interface IUIThemeUpdaterService | dosymep.SimpleServices",
    "keywords": "Interface IUIThemeUpdaterService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Интерфейс по обновлению тем окон. public interface IUIThemeUpdaterService Methods SetTheme(Window, UIThemes) Устанавливает текущую тему окна. void SetTheme(Window window, UIThemes theme) Parameters window Window Окно, которому устанавливают тему. theme UIThemes Устанавливаемая тема окна."
  },
  "api/dosymep.SimpleServices.MessageBoxServiceExtensions.html": {
    "href": "api/dosymep.SimpleServices.MessageBoxServiceExtensions.html",
    "title": "Class MessageBoxServiceExtensions | dosymep.SimpleServices",
    "keywords": "Class MessageBoxServiceExtensions Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Расширения для сервиса сообщений. public static class MessageBoxServiceExtensions Inheritance object MessageBoxServiceExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Show(IMessageBoxService, string) Показывает сообщение с указанными параметрами. public static MessageBoxResult Show(this IMessageBoxService service, string messageBoxText) Parameters service IMessageBoxService Сервис окна сообщений. messageBoxText string Текст отображаемый в окне сообщения. Returns MessageBoxResult Возвращает кнопку, на которую кликнул пользователь. Show(IMessageBoxService, string, string) Показывает сообщение с указанными параметрами. public static MessageBoxResult Show(this IMessageBoxService service, string messageBoxText, string caption) Parameters service IMessageBoxService Сервис окна сообщений. messageBoxText string Текст отображаемый в окне сообщения. caption string Заголовок окна сообщения. Returns MessageBoxResult Возвращает кнопку, на которую кликнул пользователь. Show(IMessageBoxService, string, string, MessageBoxButton) Показывает сообщение с указанными параметрами. public static MessageBoxResult Show(this IMessageBoxService service, string messageBoxText, string caption, MessageBoxButton button) Parameters service IMessageBoxService Сервис окна сообщений. messageBoxText string Текст отображаемый в окне сообщения. caption string Заголовок окна сообщения. button MessageBoxButton Кнопки отображаемые в окне сообщения. Returns MessageBoxResult Возвращает кнопку, на которую кликнул пользователь. Show(IMessageBoxService, string, string, MessageBoxButton, MessageBoxImage) Показывает сообщение с указанными параметрами. public static MessageBoxResult Show(this IMessageBoxService service, string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon) Parameters service IMessageBoxService Сервис окна сообщений. messageBoxText string Текст отображаемый в окне сообщения. caption string Заголовок окна сообщения. button MessageBoxButton Кнопки отображаемые в окне сообщения. icon MessageBoxImage отображаемая в окне сообщения. Returns MessageBoxResult Возвращает кнопку, на которую кликнул пользователь."
  },
  "api/dosymep.SimpleServices.OrganizationSpace.html": {
    "href": "api/dosymep.SimpleServices.OrganizationSpace.html",
    "title": "Class OrganizationSpace | dosymep.SimpleServices",
    "keywords": "Class OrganizationSpace Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Организации настройки пространства профиля. public sealed class OrganizationSpace : ProfileSpace, IEquatable<ProfileSpace> Inheritance object ProfileSpace OrganizationSpace Implements IEquatable<ProfileSpace> Inherited Members ProfileSpace.Equals(ProfileSpace) ProfileSpace.Equals(object) ProfileSpace.GetHashCode() ProfileSpace.UserSpace ProfileSpace.SystemSpace ProfileSpace.OrganizationSpace ProfileSpace.Name object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType()"
  },
  "api/dosymep.SimpleServices.PlatformProfiles.IProfileInstance.html": {
    "href": "api/dosymep.SimpleServices.PlatformProfiles.IProfileInstance.html",
    "title": "Interface IProfileInstance | dosymep.SimpleServices",
    "keywords": "Interface IProfileInstance Namespace dosymep.SimpleServices.PlatformProfiles Assembly dosymep.SimpleServices.dll public interface IProfileInstance Methods GetProfileSettings<T>(string) T GetProfileSettings<T>(string pluginName) Parameters pluginName string Returns T Type Parameters T GetProfileSettings<T>(string, string) T GetProfileSettings<T>(string pluginName, string settingsName) Parameters pluginName string settingsName string Returns T Type Parameters T SaveProfileSettings<T>(T, string) void SaveProfileSettings<T>(T settings, string pluginName) Parameters settings T pluginName string Type Parameters T SaveProfileSettings<T>(T, string, string) void SaveProfileSettings<T>(T settings, string pluginName, string settingsName) Parameters settings T pluginName string settingsName string Type Parameters T"
  },
  "api/dosymep.SimpleServices.PlatformProfiles.PlatformProfileService.html": {
    "href": "api/dosymep.SimpleServices.PlatformProfiles.PlatformProfileService.html",
    "title": "Class PlatformProfileService | dosymep.SimpleServices",
    "keywords": "Class PlatformProfileService Namespace dosymep.SimpleServices.PlatformProfiles Assembly dosymep.SimpleServices.dll Класс сервиса профилей платформы. public class PlatformProfileService : IPlatformProfileService<UserSpace>, IPlatformProfileService<SystemSpace>, IPlatformProfileService<OrganizationSpace>, IPlatformProfileService Inheritance object PlatformProfileService Implements IPlatformProfileService<UserSpace> IPlatformProfileService<SystemSpace> IPlatformProfileService<OrganizationSpace> IPlatformProfileService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PlatformProfileService(IProfileStorage, ProfileInfo) Сохраняет экземпляр профиля. public PlatformProfileService(IProfileStorage profileStorage, ProfileInfo profileInfo) Parameters profileStorage IProfileStorage Хранилище профилей. profileInfo ProfileInfo Информация о профиле. Properties Organization Профиль организации public IProfileInstance Organization { get; } Property Value IProfileInstance System Профиль системы. public IProfileInstance System { get; } Property Value IProfileInstance User Профиль пользователя. public IProfileInstance User { get; } Property Value IProfileInstance"
  },
  "api/dosymep.SimpleServices.PlatformProfiles.ProfileInfo.html": {
    "href": "api/dosymep.SimpleServices.PlatformProfiles.ProfileInfo.html",
    "title": "Class ProfileInfo | dosymep.SimpleServices",
    "keywords": "Class ProfileInfo Namespace dosymep.SimpleServices.PlatformProfiles Assembly dosymep.SimpleServices.dll Класс предоставляет информацию о профиле. public class ProfileInfo Inheritance object ProfileInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ProfileInfo() public ProfileInfo()"
  },
  "api/dosymep.SimpleServices.PlatformProfiles.ProfileStorages.IProfileStorage.html": {
    "href": "api/dosymep.SimpleServices.PlatformProfiles.ProfileStorages.IProfileStorage.html",
    "title": "Interface IProfileStorage | dosymep.SimpleServices",
    "keywords": "Interface IProfileStorage Namespace dosymep.SimpleServices.PlatformProfiles.ProfileStorages Assembly dosymep.SimpleServices.dll Интерфейс предоставляет доступ к профилям. public interface IProfileStorage Properties ProfileLocalPath Возвращает и устанавливает путь до локального хранения профилей. string ProfileLocalPath { get; set; } Property Value string ProfileName Возвращает и устанавливает используемое наименование профиля. string ProfileName { get; set; } Property Value string Methods GetCurrentProfileInfo() Возвращает информацию о текущем профиле. ProfileInfo GetCurrentProfileInfo() Returns ProfileInfo Возвращает информацию о текущем профиле. GetProfileInfos() Возвращает информацию о сохраненных профилях в системе. ProfileInfo[] GetProfileInfos() Returns ProfileInfo[] Возвращает информацию о сохраненных профилях в системе. LoadProfileSpace(ProfileInfo, ProfileSpace) Возвращает определение профиля из хранилища. IProfileInstance LoadProfileSpace(ProfileInfo profileInfo, ProfileSpace profileSpace) Parameters profileInfo ProfileInfo Информация профиля. profileSpace ProfileSpace Пространство профиля. Returns IProfileInstance Возвращает определение профиля из хранилища."
  },
  "api/dosymep.SimpleServices.PlatformProfiles.ProfileStorages.RegStorage.html": {
    "href": "api/dosymep.SimpleServices.PlatformProfiles.ProfileStorages.RegStorage.html",
    "title": "Class RegStorage | dosymep.SimpleServices",
    "keywords": "Class RegStorage Namespace dosymep.SimpleServices.PlatformProfiles.ProfileStorages Assembly dosymep.SimpleServices.dll Класс хранилища профиля в реестре. public class RegStorage : IProfileStorage Inheritance object RegStorage Implements IProfileStorage Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RegStorage(string, string, ISerializationService) Конструктор хранилища профиля в реестре. public RegStorage(string regPath, string applicationVersion, ISerializationService serializationService) Parameters regPath string Относительный путь до хранилища в реестре. applicationVersion string Версия приложения. serializationService ISerializationService Сервис сериализации. Properties ProfileLocalPath Возвращает и устанавливает путь до локального хранения профилей. public string ProfileLocalPath { get; set; } Property Value string ProfileName Возвращает и устанавливает используемое наименование профиля. public string ProfileName { get; set; } Property Value string Methods GetCurrentProfileInfo() Возвращает информацию о текущем профиле. public ProfileInfo GetCurrentProfileInfo() Returns ProfileInfo Возвращает информацию о текущем профиле. GetProfileInfos() Возвращает информацию о сохраненных профилях в системе. public ProfileInfo[] GetProfileInfos() Returns ProfileInfo[] Возвращает информацию о сохраненных профилях в системе. LoadProfileSpace(ProfileInfo, ProfileSpace) Возвращает определение профиля из хранилища. public IProfileInstance LoadProfileSpace(ProfileInfo profileInfo, ProfileSpace profileSpace) Parameters profileInfo ProfileInfo Информация профиля. profileSpace ProfileSpace Пространство профиля. Returns IProfileInstance Возвращает определение профиля из хранилища."
  },
  "api/dosymep.SimpleServices.PlatformProfiles.ProfileStorages.html": {
    "href": "api/dosymep.SimpleServices.PlatformProfiles.ProfileStorages.html",
    "title": "Namespace dosymep.SimpleServices.PlatformProfiles.ProfileStorages | dosymep.SimpleServices",
    "keywords": "Namespace dosymep.SimpleServices.PlatformProfiles.ProfileStorages Classes RegStorage Класс хранилища профиля в реестре. Interfaces IProfileStorage Интерфейс предоставляет доступ к профилям."
  },
  "api/dosymep.SimpleServices.PlatformProfiles.html": {
    "href": "api/dosymep.SimpleServices.PlatformProfiles.html",
    "title": "Namespace dosymep.SimpleServices.PlatformProfiles | dosymep.SimpleServices",
    "keywords": "Namespace dosymep.SimpleServices.PlatformProfiles Classes PlatformProfileService Класс сервиса профилей платформы. ProfileInfo Класс предоставляет информацию о профиле. Interfaces IProfileInstance"
  },
  "api/dosymep.SimpleServices.ProfileSpace.html": {
    "href": "api/dosymep.SimpleServices.ProfileSpace.html",
    "title": "Class ProfileSpace | dosymep.SimpleServices",
    "keywords": "Class ProfileSpace Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Абстрактный класс настроек пространства профиля. public abstract class ProfileSpace : IEquatable<ProfileSpace> Inheritance object ProfileSpace Implements IEquatable<ProfileSpace> Derived OrganizationSpace SystemSpace UserSpace Inherited Members object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors ProfileSpace(string) Создает экземпляр пространства настроек профиля. protected ProfileSpace(string name) Parameters name string Properties Name Наименование пространства профиля. public string Name { get; } Property Value string OrganizationSpace Организации настройки пространства профиля. public static OrganizationSpace OrganizationSpace { get; } Property Value OrganizationSpace SystemSpace Системные настройки пространства профиля. public static SystemSpace SystemSpace { get; } Property Value SystemSpace UserSpace Пользовательские настройки пространства профиля. public static UserSpace UserSpace { get; } Property Value UserSpace Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(ProfileSpace) public bool Equals(ProfileSpace other) Parameters other ProfileSpace Returns bool GetHashCode() public override int GetHashCode() Returns int Operators operator ==(ProfileSpace, ProfileSpace) Оператор сравнения. public static bool operator ==(ProfileSpace left, ProfileSpace right) Parameters left ProfileSpace Левый операнд. right ProfileSpace Правый операнд. Returns bool Возвращает true - если левый операнд равен правому, иначе false. operator !=(ProfileSpace, ProfileSpace) Оператор сравнения. public static bool operator !=(ProfileSpace left, ProfileSpace right) Parameters left ProfileSpace Левый операнд. right ProfileSpace Правый операнд. Returns bool Возвращает true - если левый операнд не равен правому, иначе false."
  },
  "api/dosymep.SimpleServices.RootWindowService.html": {
    "href": "api/dosymep.SimpleServices.RootWindowService.html",
    "title": "Class RootWindowService | dosymep.SimpleServices",
    "keywords": "Class RootWindowService Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Класс текущего рабочего окна. public class RootWindowService : IRootWindowService Inheritance object RootWindowService Implements IRootWindowService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RootWindowService() public RootWindowService() Properties RootWindow Текущее корневое окно. public Window RootWindow { get; set; } Property Value Window"
  },
  "api/dosymep.SimpleServices.SystemSpace.html": {
    "href": "api/dosymep.SimpleServices.SystemSpace.html",
    "title": "Class SystemSpace | dosymep.SimpleServices",
    "keywords": "Class SystemSpace Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Системные настройки пространства профиля. public sealed class SystemSpace : ProfileSpace, IEquatable<ProfileSpace> Inheritance object ProfileSpace SystemSpace Implements IEquatable<ProfileSpace> Inherited Members ProfileSpace.Equals(ProfileSpace) ProfileSpace.Equals(object) ProfileSpace.GetHashCode() ProfileSpace.UserSpace ProfileSpace.SystemSpace ProfileSpace.OrganizationSpace ProfileSpace.Name object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType()"
  },
  "api/dosymep.SimpleServices.UIThemes.html": {
    "href": "api/dosymep.SimpleServices.UIThemes.html",
    "title": "Enum UIThemes | dosymep.SimpleServices",
    "keywords": "Enum UIThemes Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Используемые темы. public enum UIThemes Fields Dark = 0 Темная. Light = 1 Светлая тема."
  },
  "api/dosymep.SimpleServices.UserSpace.html": {
    "href": "api/dosymep.SimpleServices.UserSpace.html",
    "title": "Class UserSpace | dosymep.SimpleServices",
    "keywords": "Class UserSpace Namespace dosymep.SimpleServices Assembly dosymep.SimpleServices.dll Пользовательские настройки пространства профиля. public sealed class UserSpace : ProfileSpace, IEquatable<ProfileSpace> Inheritance object ProfileSpace UserSpace Implements IEquatable<ProfileSpace> Inherited Members ProfileSpace.Equals(ProfileSpace) ProfileSpace.Equals(object) ProfileSpace.GetHashCode() ProfileSpace.UserSpace ProfileSpace.SystemSpace ProfileSpace.OrganizationSpace ProfileSpace.Name object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType()"
  },
  "api/dosymep.SimpleServices.html": {
    "href": "api/dosymep.SimpleServices.html",
    "title": "Namespace dosymep.SimpleServices | dosymep.SimpleServices",
    "keywords": "Namespace dosymep.SimpleServices Classes MessageBoxServiceExtensions Расширения для сервиса сообщений. OrganizationSpace Организации настройки пространства профиля. ProfileSpace Абстрактный класс настроек пространства профиля. RootWindowService Класс текущего рабочего окна. SystemSpace Системные настройки пространства профиля. UserSpace Пользовательские настройки пространства профиля. Interfaces IAttachableService Интерфейс прикрепления сервиса. IDispatcherService Предоставляет доступ к Dispatcher IFileDialogServiceBase Предоставляет методы и свойства для конфигурации стандартного диалога. ILanguageService Предоставляет доступ к языку интерфейса. ILocalizationService Сервис локализации предоставляет простой интерфейс для получения локализированных строк. ILoggerService IMessageBoxService Предоставляет методы для показа окна сообщений. INotification Интерфейс уведомления. INotificationService Предоставляет методы для показа уведомлений. IOpenDialogServiceBase Предоставляет общие члены IOpenFileDialogService и IOpenFolderDialogService. IOpenFileDialogService Предоставляет методы для просмотра и открытия файлов. IOpenFolderDialogService Предоставляет методы для открытия папок. IPlatformProfileService Интерфейс сервиса профилей. IPlatformProfileService<TSpaceProfile> Интерфейс предоставляет доступ к настройкам плагинов. IProgressDialogFactory Фабрика создания сервиса прогресс диалога. IProgressDialogService Интерфейс прогресс диалога. IRootWindowService Интерфейс рабочего окна ISaveFileDialogService Предоставляет методы для сохранения данных в файл. ISerializationService Сервис сериализации. IUIThemeService Предоставляет доступ к теме интерфейса. IUIThemeUpdaterService Интерфейс по обновлению тем окон. Enums UIThemes Используемые темы."
  },
  "api/dosymep.Xpf.Core.BaseViewModel.html": {
    "href": "api/dosymep.Xpf.Core.BaseViewModel.html",
    "title": "Class BaseViewModel | dosymep.SimpleServices",
    "keywords": "Class BaseViewModel Namespace dosymep.Xpf.Core Assembly dosymep.Xpf.Core.dll public abstract class BaseViewModel : ViewModelBase Inheritance object BaseViewModel Constructors BaseViewModel() protected BaseViewModel()"
  },
  "api/dosymep.Xpf.Core.BaseWindow.html": {
    "href": "api/dosymep.Xpf.Core.BaseWindow.html",
    "title": "Class BaseWindow | dosymep.SimpleServices",
    "keywords": "Class BaseWindow Namespace dosymep.Xpf.Core Assembly dosymep.Xpf.Core.dll public class BaseWindow : ThemedWindow Inheritance object BaseWindow Constructors BaseWindow() public BaseWindow()"
  },
  "api/dosymep.Xpf.Core.Commands.XtraAsyncCommand-1.html": {
    "href": "api/dosymep.Xpf.Core.Commands.XtraAsyncCommand-1.html",
    "title": "Class XtraAsyncCommand<T> | dosymep.SimpleServices",
    "keywords": "Class XtraAsyncCommand<T> Namespace dosymep.Xpf.Core.Commands Assembly dosymep.Xpf.Core.dll public abstract class XtraAsyncCommand<T> : AsyncCommand<T> Type Parameters T Inheritance object XtraAsyncCommand<T> Constructors XtraAsyncCommand(Func<T, Task>) public XtraAsyncCommand(Func<T, Task> executeMethod) Parameters executeMethod Func<T, Task> XtraAsyncCommand(Func<T, Task>, bool) public XtraAsyncCommand(Func<T, Task> executeMethod, bool useCommandManager) Parameters executeMethod Func<T, Task> useCommandManager bool XtraAsyncCommand(Func<T, Task>, Func<T, bool>, bool, bool?) public XtraAsyncCommand(Func<T, Task> executeMethod, Func<T, bool> canExecuteMethod, bool allowMultipleExecution, bool? useCommandManager = null) Parameters executeMethod Func<T, Task> canExecuteMethod Func<T, bool> allowMultipleExecution bool useCommandManager bool? XtraAsyncCommand(Func<T, Task>, Func<T, bool>, bool?) public XtraAsyncCommand(Func<T, Task> executeMethod, Func<T, bool> canExecuteMethod, bool? useCommandManager = null) Parameters executeMethod Func<T, Task> canExecuteMethod Func<T, bool> useCommandManager bool?"
  },
  "api/dosymep.Xpf.Core.Commands.XtraAsyncCommand.html": {
    "href": "api/dosymep.Xpf.Core.Commands.XtraAsyncCommand.html",
    "title": "Class XtraAsyncCommand | dosymep.SimpleServices",
    "keywords": "Class XtraAsyncCommand Namespace dosymep.Xpf.Core.Commands Assembly dosymep.Xpf.Core.dll public abstract class XtraAsyncCommand : AsyncCommand Inheritance object XtraAsyncCommand Constructors XtraAsyncCommand(Func<Task>) public XtraAsyncCommand(Func<Task> executeMethod) Parameters executeMethod Func<Task> XtraAsyncCommand(Func<Task>, bool) public XtraAsyncCommand(Func<Task> executeMethod, bool useCommandManager) Parameters executeMethod Func<Task> useCommandManager bool XtraAsyncCommand(Func<Task>, Func<bool>, bool, bool?) public XtraAsyncCommand(Func<Task> executeMethod, Func<bool> canExecuteMethod, bool allowMultipleExecution, bool? useCommandManager = null) Parameters executeMethod Func<Task> canExecuteMethod Func<bool> allowMultipleExecution bool useCommandManager bool? XtraAsyncCommand(Func<Task>, Func<bool>, bool?) public XtraAsyncCommand(Func<Task> executeMethod, Func<bool> canExecuteMethod, bool? useCommandManager = null) Parameters executeMethod Func<Task> canExecuteMethod Func<bool> useCommandManager bool?"
  },
  "api/dosymep.Xpf.Core.Commands.XtraBaseCommand-1.html": {
    "href": "api/dosymep.Xpf.Core.Commands.XtraBaseCommand-1.html",
    "title": "Class XtraBaseCommand<T> | dosymep.SimpleServices",
    "keywords": "Class XtraBaseCommand<T> Namespace dosymep.Xpf.Core.Commands Assembly dosymep.Xpf.Core.dll public abstract class XtraBaseCommand<T> : CommandBase<T> Type Parameters T Inheritance object XtraBaseCommand<T> Constructors XtraBaseCommand() protected XtraBaseCommand() Methods Execute(T) public override void Execute(T parameter) Parameters parameter T ExecuteImpl(T) protected abstract void ExecuteImpl(T parameter) Parameters parameter T"
  },
  "api/dosymep.Xpf.Core.Commands.XtraBaseCommand.html": {
    "href": "api/dosymep.Xpf.Core.Commands.XtraBaseCommand.html",
    "title": "Class XtraBaseCommand | dosymep.SimpleServices",
    "keywords": "Class XtraBaseCommand Namespace dosymep.Xpf.Core.Commands Assembly dosymep.Xpf.Core.dll public abstract class XtraBaseCommand : CommandBase Inheritance object XtraBaseCommand Constructors XtraBaseCommand() protected XtraBaseCommand()"
  },
  "api/dosymep.Xpf.Core.Commands.XtraDelegateCommand-1.html": {
    "href": "api/dosymep.Xpf.Core.Commands.XtraDelegateCommand-1.html",
    "title": "Class XtraDelegateCommand<T> | dosymep.SimpleServices",
    "keywords": "Class XtraDelegateCommand<T> Namespace dosymep.Xpf.Core.Commands Assembly dosymep.Xpf.Core.dll public abstract class XtraDelegateCommand<T> : DelegateCommand<T> Type Parameters T Inheritance object XtraDelegateCommand<T> Constructors XtraDelegateCommand(Action<T>) public XtraDelegateCommand(Action<T> executeMethod) Parameters executeMethod Action<T> XtraDelegateCommand(Action<T>, bool) public XtraDelegateCommand(Action<T> executeMethod, bool useCommandManager) Parameters executeMethod Action<T> useCommandManager bool XtraDelegateCommand(Action<T>, Func<T, bool>, bool?) public XtraDelegateCommand(Action<T> executeMethod, Func<T, bool> canExecuteMethod, bool? useCommandManager = null) Parameters executeMethod Action<T> canExecuteMethod Func<T, bool> useCommandManager bool?"
  },
  "api/dosymep.Xpf.Core.Commands.XtraDelegateCommand.html": {
    "href": "api/dosymep.Xpf.Core.Commands.XtraDelegateCommand.html",
    "title": "Class XtraDelegateCommand | dosymep.SimpleServices",
    "keywords": "Class XtraDelegateCommand Namespace dosymep.Xpf.Core.Commands Assembly dosymep.Xpf.Core.dll public abstract class XtraDelegateCommand : DelegateCommand Inheritance object XtraDelegateCommand Constructors XtraDelegateCommand(Action) public XtraDelegateCommand(Action executeMethod) Parameters executeMethod Action XtraDelegateCommand(Action, bool) public XtraDelegateCommand(Action executeMethod, bool useCommandManager) Parameters executeMethod Action useCommandManager bool XtraDelegateCommand(Action, Func<bool>, bool?) public XtraDelegateCommand(Action executeMethod, Func<bool> canExecuteMethod, bool? useCommandManager = null) Parameters executeMethod Action canExecuteMethod Func<bool> useCommandManager bool?"
  },
  "api/dosymep.Xpf.Core.Commands.html": {
    "href": "api/dosymep.Xpf.Core.Commands.html",
    "title": "Namespace dosymep.Xpf.Core.Commands | dosymep.SimpleServices",
    "keywords": "Namespace dosymep.Xpf.Core.Commands Classes XtraAsyncCommand XtraAsyncCommand<T> XtraBaseCommand XtraBaseCommand<T> XtraDelegateCommand XtraDelegateCommand<T>"
  },
  "api/dosymep.Xpf.Core.Ninject.NinjectExtensions.html": {
    "href": "api/dosymep.Xpf.Core.Ninject.NinjectExtensions.html",
    "title": "Class NinjectExtensions | dosymep.SimpleServices",
    "keywords": "Class NinjectExtensions Namespace dosymep.Xpf.Core.Ninject Assembly dosymep.Xpf.Core.Ninject.dll Расширения для настройки Ninject.IKernel. public static class NinjectExtensions Inheritance object NinjectExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods UseLocalization(IKernel, string, CultureInfo?) Добавляет в контейнер ILocalizationService. public static IKernel UseLocalization(this IKernel kernel, string resourceName, CultureInfo? defaultCulture = null) Parameters kernel IKernel Ninject контейнер. resourceName string Наименование ресурсов. defaultCulture CultureInfo Языковые настройки по умолчанию. Значение по умолчанию CurrentUICulture. Returns IKernel Возвращает настроенный контейнер Ninject. UseXtraDispatcher(IKernel) Добавляет в контейнер IDispatcherService. public static IKernel UseXtraDispatcher(this IKernel kernel) Parameters kernel IKernel Ninject контейнер. Returns IKernel Возвращает настроенный контейнер Ninject. Exceptions ArgumentNullException kernel is null. UseXtraDispatcher<T>(IKernel) Добавляет в контейнер IDispatcherService. public static IKernel UseXtraDispatcher<T>(this IKernel kernel) Parameters kernel IKernel Ninject контейнер. Returns IKernel Возвращает настроенный контейнер Ninject. Type Parameters T Тип ViewModel к которой будет прикрепление сервиса. Remarks Обязательно требуется прикрепить к элементу управления через AttachServiceBehavior. Exceptions ArgumentNullException kernel is null. UseXtraLanguage(IKernel) Добавляет в контейнер ILanguageService, который возвращает установленную локализацию в настройках Windows. public static IKernel UseXtraLanguage(this IKernel kernel) Parameters kernel IKernel Ninject контейнер. Returns IKernel Возвращает настроенный контейнер Ninject. Exceptions ArgumentNullException kernel is null. UseXtraMessageBox(IKernel) Добавляет в контейнер IMessageBoxService. public static IKernel UseXtraMessageBox(this IKernel kernel) Parameters kernel IKernel Ninject контейнер. Returns IKernel Возвращает настроенный контейнер Ninject. Exceptions ArgumentNullException kernel is null. UseXtraMessageBox<T>(IKernel) Добавляет в контейнер IMessageBoxService. public static IKernel UseXtraMessageBox<T>(this IKernel kernel) Parameters kernel IKernel Ninject контейнер. Returns IKernel Возвращает настроенный контейнер Ninject. Type Parameters T Тип ViewModel к которой будет прикрепление сервиса. Remarks Обязательно требуется прикрепить к элементу управления через AttachServiceBehavior. Exceptions ArgumentNullException kernel is null. UseXtraNotifications(IKernel, string?, string?, string?, ImageSource?, PredefinedSound?, NotificationScreen?, NotificationPosition?, int) Добавляет в контейнер INotificationService. public static IKernel UseXtraNotifications(this IKernel kernel, string? applicationId = null, string? defaultAuthor = null, string? defaultFooter = null, ImageSource? defaultImage = null, PredefinedSound? sound = 1, NotificationScreen? notificationScreen = 0, NotificationPosition? notificationPosition = 0, int notificationVisibleMaxCount = 5) Parameters kernel IKernel Ninject контейнер. applicationId string Идентификатор приложения. defaultAuthor string Имя автора по умолчанию. Расположение снизу справа на уведомлении. defaultFooter string Значение футера по умолчанию. Расположение снизу слева на уведомлении. defaultImage ImageSource Значение изображения по умолчанию. Расположение слева на уведомлении. sound PredefinedSound Значение звука уведомления (не используется). По умолчанию DevExpress.Mvvm.UI.PredefinedSound.NoSound. notificationScreen NotificationScreen Значение выбора окна. По умолчанию DevExpress.Mvvm.UI.NotificationScreen.Primary. notificationPosition NotificationPosition Значение места отображения уведомления. По умолчанию DevExpress.Mvvm.UI.NotificationPosition.BottomRight. notificationVisibleMaxCount int Максимальное количество уведомлений на экране. По умолчанию \"5\". Returns IKernel Возвращает настроенный контейнер Ninject. Exceptions ArgumentNullException kernel is null. UseXtraNotifications<T>(IKernel, string?, string?, string?, ImageSource?, PredefinedSound?, NotificationScreen?, NotificationPosition?, int) Добавляет в контейнер INotificationService. public static IKernel UseXtraNotifications<T>(this IKernel kernel, string? applicationId = null, string? defaultAuthor = null, string? defaultFooter = null, ImageSource? defaultImage = null, PredefinedSound? sound = 1, NotificationScreen? notificationScreen = 1, NotificationPosition? notificationPosition = 0, int notificationVisibleMaxCount = 5) Parameters kernel IKernel Ninject контейнер. applicationId string Идентификатор приложения. defaultAuthor string Имя автора по умолчанию. Расположение снизу справа на уведомлении. defaultFooter string Значение футера по умолчанию. Расположение снизу слева на уведомлении. defaultImage ImageSource Значение изображения по умолчанию. Расположение слева на уведомлении. sound PredefinedSound Значение звука уведомления (не используется). По умолчанию DevExpress.Mvvm.UI.PredefinedSound.NoSound. notificationScreen NotificationScreen Значение выбора окна. По умолчанию DevExpress.Mvvm.UI.NotificationScreen.Primary. notificationPosition NotificationPosition Значение места отображения уведомления. По умолчанию DevExpress.Mvvm.UI.NotificationPosition.BottomRight. notificationVisibleMaxCount int Максимальное количество уведомлений на экране. По умолчанию \"5\". Returns IKernel Возвращает настроенный контейнер Ninject. Type Parameters T Тип ViewModel к которой будет прикрепление сервиса. Remarks Обязательно требуется прикрепить к элементу управления через AttachServiceBehavior. Exceptions ArgumentNullException kernel is null. UseXtraOpenFileDialog(IKernel, string?, string?, int, string?, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool) Добавляет в контейнер IOpenFileDialogService. public static IKernel UseXtraOpenFileDialog(this IKernel kernel, string? title = \"Выбрать файл\", string? filter = \"Все файлы (*.*)|*.*\", int filterIndex = 0, string? initialDirectory = null, bool multiSelect = false, bool addExtension = true, bool autoUpgradeEnabled = true, bool checkFileExists = true, bool checkPathExists = true, bool validateNames = true, bool dereferenceLinks = true, bool restoreDirectory = false, bool showHelp = false, bool supportMultiDottedExtensions = false) Parameters kernel IKernel Ninject контейнер. title string Заголовок окна. По умолчанию \"Выбрать файл\". filter string Применяемый фильтр для файлов. По умолчанию \"Все файлы (.)|.\". filterIndex int Применяемый индекс фильтра для файлов. По умолчанию \"0\". initialDirectory string Директория открываемая по умолчанию. multiSelect bool True - включает мультивыбор файлов. По умолчанию выключено. addExtension bool True включает автоматическое добавление расширения файла. По умолчанию включено. autoUpgradeEnabled bool True - включает автоматическую смену внешнего вида. По умолчанию включено. checkFileExists bool True - включает проверку расширения файла. По умолчанию включено. checkPathExists bool True - включает проверку существования пути до файла. По умолчанию включено. validateNames bool True - включает проверку правильности набранного имени файла. По умолчанию включено. dereferenceLinks bool True - включает возвращение расположения файла, на который ссылается ярлык. По умолчанию включено. restoreDirectory bool True - запоминает выбранное расположение. По умолчанию выключено. showHelp bool True - включает отображение справки. По умолчанию выключено. supportMultiDottedExtensions bool True - включает отображение и сохранение файлов с несколькими расширениями. По умолчанию выключено. Returns IKernel Возвращает настроенный контейнер Ninject. Exceptions ArgumentNullException kernel is null. UseXtraOpenFileDialog<T>(IKernel, string?, string?, int, string?, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool) Добавляет в контейнер IOpenFileDialogService. public static IKernel UseXtraOpenFileDialog<T>(this IKernel kernel, string? title = \"Выбрать файл\", string? filter = \"Все файлы (*.*)|*.*\", int filterIndex = 0, string? initialDirectory = null, bool multiSelect = false, bool addExtension = true, bool autoUpgradeEnabled = true, bool checkFileExists = true, bool checkPathExists = true, bool validateNames = true, bool dereferenceLinks = true, bool restoreDirectory = false, bool showHelp = false, bool supportMultiDottedExtensions = false) Parameters kernel IKernel Ninject контейнер. title string Заголовок окна. По умолчанию \"Выбрать файл\". filter string Применяемый фильтр для файлов. По умолчанию \"Все файлы (.)|.\". filterIndex int Применяемый индекс фильтра для файлов. По умолчанию \"0\". initialDirectory string Директория открываемая по умолчанию. multiSelect bool True - включает мультивыбор файлов. По умолчанию выключено. addExtension bool True включает автоматическое добавление расширения файла. По умолчанию включено. autoUpgradeEnabled bool True - включает автоматическую смену внешнего вида. По умолчанию включено. checkFileExists bool True - включает проверку расширения файла. По умолчанию включено. checkPathExists bool True - включает проверку существования пути до файла. По умолчанию включено. validateNames bool True - включает проверку правильности набранного имени файла. По умолчанию включено. dereferenceLinks bool True - включает возвращение расположения файла, на который ссылается ярлык. По умолчанию включено. restoreDirectory bool True - запоминает выбранное расположение. По умолчанию выключено. showHelp bool True - включает отображение справки. По умолчанию выключено. supportMultiDottedExtensions bool True - включает отображение и сохранение файлов с несколькими расширениями. По умолчанию выключено. Returns IKernel Возвращает настроенный контейнер Ninject. Type Parameters T Тип ViewModel к которой будет прикрепление сервиса. Remarks Обязательно требуется прикрепить к элементу управления через AttachServiceBehavior. Exceptions ArgumentNullException kernel is null. UseXtraOpenFolderDialog(IKernel, string?, string?, bool, bool, bool, bool, bool, bool) Добавляет в контейнер IOpenFolderDialogService. public static IKernel UseXtraOpenFolderDialog(this IKernel kernel, string? title = \"Выбрать папку\", string? initialDirectory = null, bool multiSelect = false, bool autoUpgradeEnabled = true, bool checkPathExists = true, bool validateNames = true, bool restoreDirectory = false, bool showHelp = false) Parameters kernel IKernel Ninject контейнер. title string Заголовок окна. По умолчанию \"Выбрать папку\". initialDirectory string Директория открываемая по умолчанию. multiSelect bool True - разрешает мультивыбор. По умолчанию отключено. autoUpgradeEnabled bool True - включает автоматическую смену внешнего вида. По умолчанию включено. checkPathExists bool True - включает проверку существования пути до файла. По умолчанию включено. validateNames bool True - включает проверку правильности набранного имени файла. По умолчанию включено. restoreDirectory bool True - запоминает выбранное расположение. По умолчанию выключено. showHelp bool True - включает отображение справки. По умолчанию выключено. Returns IKernel Возвращает настроенный контейнер Ninject. Exceptions ArgumentNullException kernel is null. UseXtraOpenFolderDialog<T>(IKernel, string?, string?, bool, bool, bool, bool, bool, bool) Добавляет в контейнер IOpenFolderDialogService. public static IKernel UseXtraOpenFolderDialog<T>(this IKernel kernel, string? title = \"Выбрать папку\", string? initialDirectory = null, bool multiSelect = false, bool autoUpgradeEnabled = true, bool checkPathExists = true, bool validateNames = true, bool restoreDirectory = false, bool showHelp = false) Parameters kernel IKernel Ninject контейнер. title string Заголовок окна. По умолчанию \"Выбрать папку\". initialDirectory string Директория открываемая по умолчанию. multiSelect bool True - разрешает мультивыбор. По умолчанию отключено. autoUpgradeEnabled bool True - включает автоматическую смену внешнего вида. По умолчанию включено. checkPathExists bool True - включает проверку существования пути до файла. По умолчанию включено. validateNames bool True - включает проверку правильности набранного имени файла. По умолчанию включено. restoreDirectory bool True - запоминает выбранное расположение. По умолчанию выключено. showHelp bool True - включает отображение справки. По умолчанию выключено. Returns IKernel Возвращает настроенный контейнер Ninject. Type Parameters T Тип ViewModel к которой будет прикрепление сервиса. Remarks Обязательно требуется прикрепить к элементу управления через AttachServiceBehavior. Exceptions ArgumentNullException kernel is null. UseXtraProgressDialog(IKernel, int, bool, string) Добавляет в контейнер IProgressDialogService. public static IKernel UseXtraProgressDialog(this IKernel kernel, int stepValue = 10, bool indeterminate = false, string displayTitleFormat = \"Пожалуйста подождите [{0}/{1}] ...\") Parameters kernel IKernel Ninject контейнер. stepValue int Значение шага прогресса. По умолчанию \"10\". indeterminate bool True - включает неопределенный ход выполнения. По умолчанию выключено. displayTitleFormat string Формат отображения хода выполнения. Значение {0} - текущий прогресс, {1} - максимальное количество. По умолчанию \"Пожалуйста подождите [{0}/{1}] ...\" Returns IKernel Возвращает настроенный контейнер Ninject. Exceptions ArgumentNullException kernel is null. UseXtraProgressDialog<T>(IKernel, int, bool, string) Добавляет в контейнер IProgressDialogFactory. public static IKernel UseXtraProgressDialog<T>(this IKernel kernel, int stepValue = 10, bool indeterminate = false, string displayTitleFormat = \"Пожалуйста подождите [{0}/{1}] ...\") Parameters kernel IKernel Ninject контейнер. stepValue int Значение шага прогресса. По умолчанию \"10\". indeterminate bool True - включает неопределенный ход выполнения. По умолчанию выключено. displayTitleFormat string Формат отображения хода выполнения. Значение {0} - текущий прогресс, {1} - максимальное количество. По умолчанию \"Пожалуйста подождите [{0}/{1}] ...\" Returns IKernel Возвращает настроенный контейнер Ninject. Type Parameters T Тип ViewModel к которой будет прикрепление сервиса. Remarks Обязательно требуется прикрепить к элементу управления через AttachServiceBehavior. Exceptions ArgumentNullException kernel is null. UseXtraSaveFileDialog(IKernel, string?, string?, int, string?, string?, string?, bool, bool, bool, bool, bool, bool, bool, bool, bool) Добавляет в контейнер ISaveFileDialogService. public static IKernel UseXtraSaveFileDialog(this IKernel kernel, string? title = \"Сохранить файл\", string? filter = \"Все файлы (*.*)|*.*\", int filterIndex = 0, string? defaultExt = null, string? defaultFileName = null, string? initialDirectory = null, bool addExtension = true, bool autoUpgradeEnabled = true, bool checkFileExists = false, bool checkPathExists = true, bool validateNames = true, bool dereferenceLinks = true, bool restoreDirectory = false, bool showHelp = false, bool supportMultiDottedExtensions = false) Parameters kernel IKernel Ninject контейнер. title string Заголовок окна. По умолчанию \"Сохранить файл\". filter string Применяемый фильтр для файлов. По умолчанию \"Все файлы (.)|.\". filterIndex int Применяемый индекс фильтра для файлов. По умолчанию \"0\". defaultExt string Расширение файла по умолчанию. defaultFileName string Имя файла по умолчанию. initialDirectory string Директория открываемая по умолчанию. addExtension bool True включает автоматическое добавление расширения файла. По умолчанию включено. autoUpgradeEnabled bool True - включает автоматическую смену внешнего вида. По умолчанию включено. checkFileExists bool True - включает проверку расширения файла. По умолчанию включено. checkPathExists bool True - включает проверку существования пути до файла. По умолчанию включено. validateNames bool True - включает проверку правильности набранного имени файла. По умолчанию включено. dereferenceLinks bool True - включает возвращение расположения файла, на который ссылается ярлык. По умолчанию включено. restoreDirectory bool True - запоминает выбранное расположение. По умолчанию выключено. showHelp bool True - включает отображение справки. По умолчанию выключено. supportMultiDottedExtensions bool True - включает отображение и сохранение файлов с несколькими расширениями. По умолчанию выключено. Returns IKernel Возвращает настроенный контейнер Ninject. Exceptions ArgumentNullException kernel is null. UseXtraSaveFileDialog<T>(IKernel, string?, string?, int, string?, string?, string?, bool, bool, bool, bool, bool, bool, bool, bool, bool) Добавляет в контейнер ISaveFileDialogService. public static IKernel UseXtraSaveFileDialog<T>(this IKernel kernel, string? title = \"Сохранить файл\", string? filter = \"Все файлы (*.*)|*.*\", int filterIndex = 0, string? defaultExt = null, string? defaultFileName = null, string? initialDirectory = null, bool addExtension = true, bool autoUpgradeEnabled = true, bool checkFileExists = false, bool checkPathExists = true, bool validateNames = true, bool dereferenceLinks = true, bool restoreDirectory = false, bool showHelp = false, bool supportMultiDottedExtensions = false) Parameters kernel IKernel Ninject контейнер. title string Заголовок окна. По умолчанию \"Сохранить файл\". filter string Применяемый фильтр для файлов. По умолчанию \"Все файлы (.)|.\". filterIndex int Применяемый индекс фильтра для файлов. По умолчанию \"0\". defaultExt string Расширение файла по умолчанию. defaultFileName string Имя файла по умолчанию. initialDirectory string Директория открываемая по умолчанию. addExtension bool True включает автоматическое добавление расширения файла. По умолчанию включено. autoUpgradeEnabled bool True - включает автоматическую смену внешнего вида. По умолчанию включено. checkFileExists bool True - включает проверку расширения файла. По умолчанию включено. checkPathExists bool True - включает проверку существования пути до файла. По умолчанию включено. validateNames bool True - включает проверку правильности набранного имени файла. По умолчанию включено. dereferenceLinks bool True - включает возвращение расположения файла, на который ссылается ярлык. По умолчанию включено. restoreDirectory bool True - запоминает выбранное расположение. По умолчанию выключено. showHelp bool True - включает отображение справки. По умолчанию выключено. supportMultiDottedExtensions bool True - включает отображение и сохранение файлов с несколькими расширениями. По умолчанию выключено. Returns IKernel Возвращает настроенный контейнер Ninject. Type Parameters T Тип ViewModel к которой будет прикрепление сервиса. Remarks Обязательно требуется прикрепить к элементу управления через AttachServiceBehavior. Exceptions ArgumentNullException kernel is null. UseXtraTheme(IKernel) Добавляет в контейнер IUIThemeService, который возвращает установленную тему в настройках Windows. public static IKernel UseXtraTheme(this IKernel kernel) Parameters kernel IKernel Ninject контейнер. Returns IKernel Возвращает настроенный контейнер Ninject. Exceptions ArgumentNullException kernel is null. UseXtraThemeUpdater(IKernel) Добавляет в контейнер IUIThemeUpdaterService, который устанавливает тему DevExpress для окна DevExpress.Xpf.Core.ThemedWindow. public static IKernel UseXtraThemeUpdater(this IKernel kernel) Parameters kernel IKernel Ninject контейнер. Returns IKernel Возвращает настроенный контейнер Ninject. Exceptions ArgumentNullException kernel is null."
  },
  "api/dosymep.Xpf.Core.Ninject.html": {
    "href": "api/dosymep.Xpf.Core.Ninject.html",
    "title": "Namespace dosymep.Xpf.Core.Ninject | dosymep.SimpleServices",
    "keywords": "Namespace dosymep.Xpf.Core.Ninject Classes NinjectExtensions Расширения для настройки Ninject.IKernel."
  },
  "api/dosymep.Xpf.Core.SimpleServices.AttachServiceBehavior.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.AttachServiceBehavior.html",
    "title": "Class AttachServiceBehavior | dosymep.SimpleServices",
    "keywords": "Class AttachServiceBehavior Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Поведение прикрепление сервисов. public sealed class AttachServiceBehavior : Behavior<DependencyObject> Inheritance object AttachServiceBehavior Constructors AttachServiceBehavior() public AttachServiceBehavior() Fields AttachableServiceProperty Свойство прикрепляемого сервиса. public static readonly DependencyProperty AttachableServiceProperty Field Value DependencyProperty Properties AttachableService Прикрепляемый сервис. public IAttachableService AttachableService { get; set; } Property Value IAttachableService Methods OnAttached() protected override void OnAttached() OnDetaching() protected override void OnDetaching()"
  },
  "api/dosymep.Xpf.Core.SimpleServices.ProgressDialogFactory.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.ProgressDialogFactory.html",
    "title": "Class ProgressDialogFactory | dosymep.SimpleServices",
    "keywords": "Class ProgressDialogFactory Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс фабрики создания сервиса прогресс диалога. public sealed class ProgressDialogFactory : IProgressDialogFactory, IAttachableService Inheritance object ProgressDialogFactory Implements IProgressDialogFactory IAttachableService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors ProgressDialogFactory() public ProgressDialogFactory() Properties AllowAttach Разрешение прикрепления. true - разрешено, false - запрещено. public bool AllowAttach { get; } Property Value bool Remarks При запрете прикрепления, прикреплении не активируется и пропускается. AssociatedObject Ассоциированный объект с сервисом. public DependencyObject AssociatedObject { get; } Property Value DependencyObject DisplayTitleFormat Строка форматирования отображения. public string DisplayTitleFormat { get; set; } Property Value string Indeterminate Указывает будет ли прогресс бар неопределенным public bool Indeterminate { get; set; } Property Value bool IsAttached true - если прикреплен, иначе false. public bool IsAttached { get; } Property Value bool StepValue Шаг обновления значение прогресса. public int StepValue { get; set; } Property Value int UIThemeService Сервис по получению тем. public IUIThemeService UIThemeService { get; set; } Property Value IUIThemeService UIThemeUpdaterService Сервис по установке тем. public IUIThemeUpdaterService UIThemeUpdaterService { get; set; } Property Value IUIThemeUpdaterService Methods Attach(DependencyObject) Прикрепление сервиса. public void Attach(DependencyObject dependencyObject) Parameters dependencyObject DependencyObject Объект с которым прикрепляется сервис. CreateDialog() Создает сервис прогресс диалога. public IProgressDialogService CreateDialog() Returns IProgressDialogService Возвращает новый экземпляр сервиса прогресс диалога. Detach() Открепление сервиса. public void Detach()"
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraBaseWindowService-1.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraBaseWindowService-1.html",
    "title": "Class XtraBaseWindowService<TServiceBase> | dosymep.SimpleServices",
    "keywords": "Class XtraBaseWindowService<TServiceBase> Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Абстрактный класс сервиса окна. public abstract class XtraBaseWindowService<TServiceBase> : IAttachableService where TServiceBase : ServiceBase Type Parameters TServiceBase Inheritance object XtraBaseWindowService<TServiceBase> Implements IAttachableService Derived XtraDispatcherService XtraNotificationService XtraOpenFileDialogService XtraOpenFolderDialogService XtraSaveFileDialogService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XtraBaseWindowService(TServiceBase) Создает экземпляр сервиса окна. protected XtraBaseWindowService(TServiceBase serviceBase) Parameters serviceBase TServiceBase Привязываемый сервис к окну. Fields _serviceBase Привязанный сервис к окну. protected readonly TServiceBase _serviceBase Field Value TServiceBase Properties AllowAttach Разрешение прикрепления. true - разрешено, false - запрещено. public bool AllowAttach { get; set; } Property Value bool Remarks При запрете прикрепления, прикреплении не активируется и пропускается. AssociatedObject Ассоциированный объект с сервисом. public DependencyObject AssociatedObject { get; } Property Value DependencyObject IsAttached true - если прикреплен, иначе false. public bool IsAttached { get; } Property Value bool Methods Attach(DependencyObject) Прикрепление сервиса. public void Attach(DependencyObject dependencyObject) Parameters dependencyObject DependencyObject Объект с которым прикрепляется сервис. Detach() Открепление сервиса. public void Detach()"
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraDispatcherService.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraDispatcherService.html",
    "title": "Class XtraDispatcherService | dosymep.SimpleServices",
    "keywords": "Class XtraDispatcherService Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс сервиса диспетчера окна. public class XtraDispatcherService : XtraBaseWindowService<DispatcherService>, IAttachableService, IDispatcherService Inheritance object XtraBaseWindowService<DispatcherService> XtraDispatcherService Implements IAttachableService IDispatcherService Inherited Members XtraBaseWindowService<DispatcherService>._serviceBase XtraBaseWindowService<DispatcherService>.Detach() XtraBaseWindowService<DispatcherService>.Attach(DependencyObject) XtraBaseWindowService<DispatcherService>.IsAttached XtraBaseWindowService<DispatcherService>.AllowAttach XtraBaseWindowService<DispatcherService>.AssociatedObject object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XtraDispatcherService() Создает экземпляр сервиса диспетчера окна. public XtraDispatcherService() Methods BeginInvoke(Action) Запускает асинхронно указанный делегат. public Task BeginInvoke(Action action) Parameters action Action Выполняемый делегат. Returns Task Invoke(Action) Запускает указанный делегат. public void Invoke(Action action) Parameters action Action Выполняемый делегат."
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraLocalizationService.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraLocalizationService.html",
    "title": "Class XtraLocalizationService | dosymep.SimpleServices",
    "keywords": "Class XtraLocalizationService Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс сервиса локализации. public sealed class XtraLocalizationService : ILocalizationService Inheritance object XtraLocalizationService Implements ILocalizationService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors XtraLocalizationService(string, CultureInfo) Создает экземпляр сервиса локализации. public XtraLocalizationService(string resourceName, CultureInfo defaultCulture) Parameters resourceName string Отночительный или абсолютный путь до ресурсов ResourceDictionary локализации. defaultCulture CultureInfo Языковые стандарты по умолчанию. Применяются, если не были найдены основные. Exceptions ArgumentException resourceName пустое или null. ArgumentNullException defaultCulture если null. Methods GetLocalizedString(string) Возвращает локализированную строку. public string GetLocalizedString(string name) Parameters name string Наименование локализированной строки. Returns string Возвращает локализированную строку. Если строка не была найдена возвращает null. GetLocalizedString(string, params object[]) Возвращает форматированную локализированную строку. public string GetLocalizedString(string name, params object[] args) Parameters name string Наименование локализированной строки. args object[] Параметры форматирования локализированной строки. Returns string Возвращает форматированную локализированную строку. Если строка не была найдена возвращает null. SetLocalization(CultureInfo, FrameworkElement) Устанавливает ресурсы локализации для интерфейса. public void SetLocalization(CultureInfo cultureInfo, FrameworkElement frameworkElement) Parameters cultureInfo CultureInfo Применяемые языковые стандарты. frameworkElement FrameworkElement Элемент интерфейса WPF."
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraMessageBoxService.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraMessageBoxService.html",
    "title": "Class XtraMessageBoxService | dosymep.SimpleServices",
    "keywords": "Class XtraMessageBoxService Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс сервиса окна сообщений. public class XtraMessageBoxService : IMessageBoxService, IAttachableService Inheritance object XtraMessageBoxService Implements IMessageBoxService IAttachableService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XtraMessageBoxService() public XtraMessageBoxService() Properties AllowAttach Разрешение прикрепления. true - разрешено, false - запрещено. public bool AllowAttach { get; set; } Property Value bool Remarks При запрете прикрепления, прикреплении не активируется и пропускается. AssociatedObject Ассоциированный объект с сервисом. public DependencyObject AssociatedObject { get; } Property Value DependencyObject IsAttached true - если прикреплен, иначе false. public bool IsAttached { get; } Property Value bool UIThemeService Сервис по получению тем. public IUIThemeService UIThemeService { get; set; } Property Value IUIThemeService UIThemeUpdaterService Сервис по установке тем. public IUIThemeUpdaterService UIThemeUpdaterService { get; set; } Property Value IUIThemeUpdaterService Methods Attach(DependencyObject) Прикрепление сервиса. public void Attach(DependencyObject dependencyObject) Parameters dependencyObject DependencyObject Объект с которым прикрепляется сервис. Detach() Открепление сервиса. public void Detach() Show(string, string, MessageBoxButton, MessageBoxImage, MessageBoxResult) Показывает сообщение с указанными параметрами. public MessageBoxResult Show(string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon, MessageBoxResult defaultResult) Parameters messageBoxText string Текст отображаемый в окне сообщения. caption string Заголовок окна сообщения. button MessageBoxButton Кнопки отображаемые в окне сообщения. icon MessageBoxImage Иконка отображаемая в окне сообщения. defaultResult MessageBoxResult Выбираемая кнопка по умолчанию при показе окна сообщения. Returns MessageBoxResult Возвращает кнопку, на которую кликнул пользователь."
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraNotificationService.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraNotificationService.html",
    "title": "Class XtraNotificationService | dosymep.SimpleServices",
    "keywords": "Class XtraNotificationService Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс сервиса уведомлений public class XtraNotificationService : XtraBaseWindowService<NotificationService>, IAttachableService, INotificationService Inheritance object XtraBaseWindowService<NotificationService> XtraNotificationService Implements IAttachableService INotificationService Inherited Members XtraBaseWindowService<NotificationService>._serviceBase XtraBaseWindowService<NotificationService>.Detach() XtraBaseWindowService<NotificationService>.Attach(DependencyObject) XtraBaseWindowService<NotificationService>.IsAttached XtraBaseWindowService<NotificationService>.AllowAttach XtraBaseWindowService<NotificationService>.AssociatedObject object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XtraNotificationService() Создает экземпляр сервиса уведомлений. public XtraNotificationService() Properties ApplicationId Идентификатор приложения. public string ApplicationId { get; set; } Property Value string DefaultAutor Значение автора по умолчанию. public string DefaultAutor { get; set; } Property Value string DefaultFooter Значение футера по умолчанию. public string DefaultFooter { get; set; } Property Value string DefaultImage Значение изображения по умолчанию. public ImageSource DefaultImage { get; set; } Property Value ImageSource NotificationPosition Позиция уведомления на экране. public NotificationPosition NotificationPosition { get; set; } Property Value NotificationPosition NotificationScreen Определяет на каком мониторе будет отображаться уведомление. public NotificationScreen NotificationScreen { get; set; } Property Value NotificationScreen NotificationVisibleMaxCount Максимальное количество отображаемых уведомлений на экране. public int NotificationVisibleMaxCount { get; set; } Property Value int Sound Предопределенные звуки уведомления. public PredefinedSound Sound { get; set; } Property Value PredefinedSound UIThemeService Устанавливает и получает сервис тем. public IUIThemeService UIThemeService { get; set; } Property Value IUIThemeService Methods CreateFatalNotification(string, string, string, ImageSource) Создает и возвращает предустановленное уведомление предупреждения. public INotification CreateFatalNotification(string title, string body, string author = null, ImageSource imageSource = null) Parameters title string Заголовок уведомления. body string Текст отображаемый в уведомлении. author string Автор плагина. imageSource ImageSource Изображение отображаемое в уведомлении. Returns INotification Возвращает созданное уведомление. CreateNotification(string, string, string, string, ImageSource) Создает и возвращает предустановленное уведомление. public INotification CreateNotification(string title, string body, string footer = null, string author = null, ImageSource imageSource = null) Parameters title string Заголовок уведомления. body string Текст отображаемый в уведомлении. footer string Отображаемый текст снизу уведомления. author string Автор плагина. imageSource ImageSource Изображение отображаемое в уведомлении. Returns INotification Возвращает созданное уведомление. CreateWarningNotification(string, string, string, ImageSource) Создает и возвращает предустановленное уведомление ошибки. public INotification CreateWarningNotification(string title, string body, string author = null, ImageSource imageSource = null) Parameters title string Заголовок уведомления. body string Текст отображаемый в уведомлении. author string Автор плагина. imageSource ImageSource Изображение отображаемое в уведомлении. Returns INotification Возвращает созданное уведомление."
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraOpenFileDialogService.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraOpenFileDialogService.html",
    "title": "Class XtraOpenFileDialogService | dosymep.SimpleServices",
    "keywords": "Class XtraOpenFileDialogService Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс сервиса открытия диалога выбора файла. public class XtraOpenFileDialogService : XtraBaseWindowService<DXOpenFileDialogService>, IAttachableService, IOpenFileDialogService, IOpenDialogServiceBase, IFileDialogServiceBase Inheritance object XtraBaseWindowService<DXOpenFileDialogService> XtraOpenFileDialogService Implements IAttachableService IOpenFileDialogService IOpenDialogServiceBase IFileDialogServiceBase Inherited Members XtraBaseWindowService<DXOpenFileDialogService>._serviceBase XtraBaseWindowService<DXOpenFileDialogService>.Detach() XtraBaseWindowService<DXOpenFileDialogService>.Attach(DependencyObject) XtraBaseWindowService<DXOpenFileDialogService>.IsAttached XtraBaseWindowService<DXOpenFileDialogService>.AllowAttach XtraBaseWindowService<DXOpenFileDialogService>.AssociatedObject object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XtraOpenFileDialogService() Создает экземпляр сервиса открытия диалога выбора файла. public XtraOpenFileDialogService() Properties AddExtension Возвращает или устанавливает значение признака автоматической установки расширения к имени файла. public bool AddExtension { get; set; } Property Value bool AutoUpgradeEnabled Возвращает или устанавливает значение признака автоматической смены внешнего вида и поведения. public bool AutoUpgradeEnabled { get; set; } Property Value bool CheckFileExists Возвращает или устанавливает признак отображения предупреждения, когда пользователь указывает не существующее имя файла. public bool CheckFileExists { get; set; } Property Value bool CheckPathExists Возвращает или устанавливает признак отображения предупреждения, когда пользователь указывает не существующий путь. public bool CheckPathExists { get; set; } Property Value bool DereferenceLinks Возвращает или устанавливает признак возвращения расположения файла, на который ссылается ярлык или возвращает расположения ярлыка. public bool DereferenceLinks { get; set; } Property Value bool File Возвращает объект определяющий файл выбранный в диалоговом окне. public FileInfo File { get; } Property Value FileInfo Files Возвращает коллекцию указывающую на все файлы выбранные в диалоговом окне. public IEnumerable<FileInfo> Files { get; } Property Value IEnumerable<FileInfo> Filter Возвращает или устанавливает строку фильтра, указывающую на параметры доступные в поле \"Тип файлов\". public string Filter { get; set; } Property Value string FilterIndex Возвращает или устанавливает индекс параметра фильтрации. public int FilterIndex { get; set; } Property Value int InitialDirectory Возвращает или устанавливает исходную папку. public string InitialDirectory { get; set; } Property Value string Multiselect Возвращает или устанавливает признак выбора нескольких файлов. public bool Multiselect { get; set; } Property Value bool RestoreDirectory Возвращает или устанавливает признак запоминания предыдущего каталога при повторном отображении. public bool RestoreDirectory { get; set; } Property Value bool ShowHelp Возвращает или устанавливает признак отображения кнопки \"Справка\". public bool ShowHelp { get; set; } Property Value bool SupportMultiDottedExtensions Возвращает или устанавливает признак отображения и сохранения файлов с несколькими расширениями. public bool SupportMultiDottedExtensions { get; set; } Property Value bool Title Возвращает или устанавливает отображаемый заголовок. public string Title { get; set; } Property Value string ValidateNames Возвращает или устанавливает признак принятия только допустимых имен файлов Win32. public bool ValidateNames { get; set; } Property Value bool Methods Reset() Сбрасывает все свойства до значений по умолчанию. public void Reset() ShowDialog() Показывает диалог выбора. public bool ShowDialog() Returns bool Возвращает результат true - если пользователь кликнул OK, иначе возвращает false. ShowDialog(string) Показывает диалог выбора. public bool ShowDialog(string directoryName) Parameters directoryName string Устанавливает исходную папку. Returns bool Возвращает результат true - если пользователь кликнул OK, иначе возвращает false."
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraOpenFolderDialogService.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraOpenFolderDialogService.html",
    "title": "Class XtraOpenFolderDialogService | dosymep.SimpleServices",
    "keywords": "Class XtraOpenFolderDialogService Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс сервиса открытия диалога выбора папки. public class XtraOpenFolderDialogService : XtraBaseWindowService<DXOpenFolderDialogService>, IAttachableService, IOpenFolderDialogService, IOpenDialogServiceBase, IFileDialogServiceBase Inheritance object XtraBaseWindowService<DXOpenFolderDialogService> XtraOpenFolderDialogService Implements IAttachableService IOpenFolderDialogService IOpenDialogServiceBase IFileDialogServiceBase Inherited Members XtraBaseWindowService<DXOpenFolderDialogService>._serviceBase XtraBaseWindowService<DXOpenFolderDialogService>.Detach() XtraBaseWindowService<DXOpenFolderDialogService>.Attach(DependencyObject) XtraBaseWindowService<DXOpenFolderDialogService>.IsAttached XtraBaseWindowService<DXOpenFolderDialogService>.AllowAttach XtraBaseWindowService<DXOpenFolderDialogService>.AssociatedObject object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XtraOpenFolderDialogService() Создает экземпляр сервиса открытия диалога выбора папки. public XtraOpenFolderDialogService() Properties AddExtension Возвращает или устанавливает значение признака автоматической установки расширения к имени файла. public bool AddExtension { get; set; } Property Value bool AutoUpgradeEnabled Возвращает или устанавливает значение признака автоматической смены внешнего вида и поведения. public bool AutoUpgradeEnabled { get; set; } Property Value bool CheckFileExists Возвращает или устанавливает признак отображения предупреждения, когда пользователь указывает не существующее имя файла. public bool CheckFileExists { get; set; } Property Value bool CheckPathExists Возвращает или устанавливает признак отображения предупреждения, когда пользователь указывает не существующий путь. public bool CheckPathExists { get; set; } Property Value bool DereferenceLinks Возвращает или устанавливает признак возвращения расположения файла, на который ссылается ярлык или возвращает расположения ярлыка. public bool DereferenceLinks { get; set; } Property Value bool Filter Возвращает или устанавливает строку фильтра, указывающую на параметры доступные в поле \"Тип файлов\". public string Filter { get; set; } Property Value string FilterIndex Возвращает или устанавливает индекс параметра фильтрации. public int FilterIndex { get; set; } Property Value int Folder Возвращает объект определяющий папку выбранную в диалоговом окне. public DirectoryInfo Folder { get; } Property Value DirectoryInfo Folders Возвращает коллекцию указывающую на все папки выбранные в диалоговом окне. public IEnumerable<DirectoryInfo> Folders { get; } Property Value IEnumerable<DirectoryInfo> InitialDirectory Возвращает или устанавливает исходную папку. public string InitialDirectory { get; set; } Property Value string Multiselect Возвращает или устанавливает признак выбора нескольких файлов. public bool Multiselect { get; set; } Property Value bool RestoreDirectory Возвращает или устанавливает признак запоминания предыдущего каталога при повторном отображении. public bool RestoreDirectory { get; set; } Property Value bool ShowHelp Возвращает или устанавливает признак отображения кнопки \"Справка\". public bool ShowHelp { get; set; } Property Value bool SupportMultiDottedExtensions Возвращает или устанавливает признак отображения и сохранения файлов с несколькими расширениями. public bool SupportMultiDottedExtensions { get; set; } Property Value bool Title Возвращает или устанавливает отображаемый заголовок. public string Title { get; set; } Property Value string ValidateNames Возвращает или устанавливает признак принятия только допустимых имен файлов Win32. public bool ValidateNames { get; set; } Property Value bool Methods Reset() Сбрасывает все свойства до значений по умолчанию. public void Reset() ShowDialog() Показывает диалог выбора. public bool ShowDialog() Returns bool Возвращает результат true - если пользователь кликнул OK, иначе возвращает false. ShowDialog(string) Показывает диалог выбора. public bool ShowDialog(string directoryName) Parameters directoryName string Устанавливает исходную папку. Returns bool Возвращает результат true - если пользователь кликнул OK, иначе возвращает false."
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraProgressDialogService.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraProgressDialogService.html",
    "title": "Class XtraProgressDialogService | dosymep.SimpleServices",
    "keywords": "Class XtraProgressDialogService Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс сервиса прогресс диалога. public class XtraProgressDialogService : IProgressDialogService, IDisposable, IAttachableService Inheritance object XtraProgressDialogService Implements IProgressDialogService IDisposable IAttachableService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XtraProgressDialogService() Создает экземпляр класса сервиса прогресс диалога. public XtraProgressDialogService() Properties AllowAttach Разрешение прикрепления. true - разрешено, false - запрещено. public bool AllowAttach { get; set; } Property Value bool Remarks При запрете прикрепления, прикреплении не активируется и пропускается. AssociatedObject Ассоциированный объект с сервисом. public DependencyObject AssociatedObject { get; } Property Value DependencyObject DisplayTitleFormat Строка форматирования отображения. public string DisplayTitleFormat { get; set; } Property Value string Indeterminate Указывает будет ли прогресс бар неопределенным public bool Indeterminate { get; set; } Property Value bool IsAttached true - если прикреплен, иначе false. public bool IsAttached { get; } Property Value bool MaxValue Максимальное значение прогресса. public int MaxValue { get; set; } Property Value int StepValue Шаг обновления значение прогресса. public int StepValue { get; set; } Property Value int UIThemeService Сервис по получению тем. public IUIThemeService UIThemeService { get; set; } Property Value IUIThemeService UIThemeUpdaterService Сервис по установке тем. public IUIThemeUpdaterService UIThemeUpdaterService { get; set; } Property Value IUIThemeUpdaterService Methods Attach(DependencyObject) Прикрепление сервиса. public void Attach(DependencyObject dependencyObject) Parameters dependencyObject DependencyObject Объект с которым прикрепляется сервис. Close() Закрывает диалог прогресса. public void Close() CreateAsyncProgress() Создает класс прогресса. public IProgress<int> CreateAsyncProgress() Returns IProgress<int> Возвращает прогресс. CreateCancellationToken() Возвращает токен отмены. public CancellationToken CreateCancellationToken() Returns CancellationToken Возвращает токен отмены. CreateProgress() Создает класс прогресса. public IProgress<int> CreateProgress() Returns IProgress<int> Возвращает прогресс. Detach() Открепление сервиса. public void Detach() Dispose() public void Dispose() Show() Открывает диалог прогресса не в модальном режиме. public void Show() ShowDialog() Открывает диалог прогресса в модальном режиме. public void ShowDialog()"
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraSaveFileDialogService.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraSaveFileDialogService.html",
    "title": "Class XtraSaveFileDialogService | dosymep.SimpleServices",
    "keywords": "Class XtraSaveFileDialogService Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс сервиса открытия диалога сохранения файла. public class XtraSaveFileDialogService : XtraBaseWindowService<DXSaveFileDialogService>, IAttachableService, ISaveFileDialogService, IFileDialogServiceBase Inheritance object XtraBaseWindowService<DXSaveFileDialogService> XtraSaveFileDialogService Implements IAttachableService ISaveFileDialogService IFileDialogServiceBase Inherited Members XtraBaseWindowService<DXSaveFileDialogService>._serviceBase XtraBaseWindowService<DXSaveFileDialogService>.Detach() XtraBaseWindowService<DXSaveFileDialogService>.Attach(DependencyObject) XtraBaseWindowService<DXSaveFileDialogService>.IsAttached XtraBaseWindowService<DXSaveFileDialogService>.AllowAttach XtraBaseWindowService<DXSaveFileDialogService>.AssociatedObject object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XtraSaveFileDialogService() Создает экземпляр сервиса открытия диалога сохранения файла. public XtraSaveFileDialogService() Properties AddExtension Возвращает или устанавливает значение признака автоматической установки расширения к имени файла. public bool AddExtension { get; set; } Property Value bool AutoUpgradeEnabled Возвращает или устанавливает значение признака автоматической смены внешнего вида и поведения. public bool AutoUpgradeEnabled { get; set; } Property Value bool CheckFileExists Возвращает или устанавливает признак отображения предупреждения, когда пользователь указывает не существующее имя файла. public bool CheckFileExists { get; set; } Property Value bool CheckPathExists Возвращает или устанавливает признак отображения предупреждения, когда пользователь указывает не существующий путь. public bool CheckPathExists { get; set; } Property Value bool DefaultExt Расширение сохраняемого файла по умолчанию. public string DefaultExt { get; set; } Property Value string DefaultFileName Наименование сохраняемого файла по умолчанию. public string DefaultFileName { get; set; } Property Value string DereferenceLinks Возвращает или устанавливает признак возвращения расположения файла, на который ссылается ярлык или возвращает расположения ярлыка. public bool DereferenceLinks { get; set; } Property Value bool File Возвращает объект определяющий файл выбранный в диалоговом окне. public FileInfo File { get; } Property Value FileInfo Filter Возвращает или устанавливает строку фильтра, указывающую на параметры доступные в поле \"Тип файлов\". public string Filter { get; set; } Property Value string FilterIndex Возвращает или устанавливает индекс параметра фильтрации. public int FilterIndex { get; set; } Property Value int InitialDirectory Возвращает или устанавливает исходную папку. public string InitialDirectory { get; set; } Property Value string RestoreDirectory Возвращает или устанавливает признак запоминания предыдущего каталога при повторном отображении. public bool RestoreDirectory { get; set; } Property Value bool ShowHelp Возвращает или устанавливает признак отображения кнопки \"Справка\". public bool ShowHelp { get; set; } Property Value bool SupportMultiDottedExtensions Возвращает или устанавливает признак отображения и сохранения файлов с несколькими расширениями. public bool SupportMultiDottedExtensions { get; set; } Property Value bool Title Возвращает или устанавливает отображаемый заголовок. public string Title { get; set; } Property Value string ValidateNames Возвращает или устанавливает признак принятия только допустимых имен файлов Win32. public bool ValidateNames { get; set; } Property Value bool Methods Reset() Сбрасывает все свойства до значений по умолчанию. public void Reset() ShowDialog(string, string) Показывает диалог сохранения файла. public bool ShowDialog(string directoryName, string fileName) Parameters directoryName string Устанавливает исходную папку. fileName string Наименование файла. Returns bool Возвращает результат true - если пользователь кликнул OK, иначе возвращает false."
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraThemeUpdaterService.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraThemeUpdaterService.html",
    "title": "Class XtraThemeUpdaterService | dosymep.SimpleServices",
    "keywords": "Class XtraThemeUpdaterService Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс по обновлению тем окон. public class XtraThemeUpdaterService : IUIThemeUpdaterService Inheritance object XtraThemeUpdaterService Implements IUIThemeUpdaterService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XtraThemeUpdaterService() public XtraThemeUpdaterService() Methods SetTheme(Window, UIThemes) Устанавливает текущую тему окна. public void SetTheme(Window window, UIThemes theme) Parameters window Window Окно, которому устанавливают тему. theme UIThemes Устанавливаемая тема окна."
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraWindowsLanguageService.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraWindowsLanguageService.html",
    "title": "Class XtraWindowsLanguageService | dosymep.SimpleServices",
    "keywords": "Class XtraWindowsLanguageService Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс сервиса доступа к языку Windows. public class XtraWindowsLanguageService : ILanguageService Inheritance object XtraWindowsLanguageService Implements ILanguageService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XtraWindowsLanguageService() public XtraWindowsLanguageService() Properties HostLanguage Используемый язык. public CultureInfo HostLanguage { get; } Property Value CultureInfo"
  },
  "api/dosymep.Xpf.Core.SimpleServices.XtraWindowsThemeService.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.XtraWindowsThemeService.html",
    "title": "Class XtraWindowsThemeService | dosymep.SimpleServices",
    "keywords": "Class XtraWindowsThemeService Namespace dosymep.Xpf.Core.SimpleServices Assembly dosymep.Xpf.Core.dll Класс сервиса тем для окон. public class XtraWindowsThemeService : IUIThemeService, IDisposable Inheritance object XtraWindowsThemeService Implements IUIThemeService IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XtraWindowsThemeService() Создает экземпляр сервиса для окон. public XtraWindowsThemeService() Properties HostTheme Текущая используемая тема. public UIThemes HostTheme { get; } Property Value UIThemes Methods Dispose() public void Dispose() Dispose(bool) Очищает подписку на событие. protected virtual void Dispose(bool disposing) Parameters disposing bool Указывает на очистку ресурсов. Events UIThemeChanged Событие возникающее при изменении темы. public event Action<UIThemes> UIThemeChanged Event Type Action<UIThemes>"
  },
  "api/dosymep.Xpf.Core.SimpleServices.html": {
    "href": "api/dosymep.Xpf.Core.SimpleServices.html",
    "title": "Namespace dosymep.Xpf.Core.SimpleServices | dosymep.SimpleServices",
    "keywords": "Namespace dosymep.Xpf.Core.SimpleServices Classes AttachServiceBehavior Поведение прикрепление сервисов. ProgressDialogFactory Класс фабрики создания сервиса прогресс диалога. XtraBaseWindowService<TServiceBase> Абстрактный класс сервиса окна. XtraDispatcherService Класс сервиса диспетчера окна. XtraLocalizationService Класс сервиса локализации. XtraMessageBoxService Класс сервиса окна сообщений. XtraNotificationService Класс сервиса уведомлений XtraOpenFileDialogService Класс сервиса открытия диалога выбора файла. XtraOpenFolderDialogService Класс сервиса открытия диалога выбора папки. XtraProgressDialogService Класс сервиса прогресс диалога. XtraSaveFileDialogService Класс сервиса открытия диалога сохранения файла. XtraThemeUpdaterService Класс по обновлению тем окон. XtraWindowsLanguageService Класс сервиса доступа к языку Windows. XtraWindowsThemeService Класс сервиса тем для окон."
  },
  "api/dosymep.Xpf.Core.html": {
    "href": "api/dosymep.Xpf.Core.html",
    "title": "Namespace dosymep.Xpf.Core | dosymep.SimpleServices",
    "keywords": "Namespace dosymep.Xpf.Core Classes BaseViewModel BaseWindow"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Описание библиотеки | dosymep.SimpleServices",
    "keywords": "Описание библиотеки Данный пакет содержит базовые интерфейсы сервисов."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Введение | dosymep.SimpleServices",
    "keywords": "Введение"
  },
  "index.html": {
    "href": "index.html",
    "title": "dosymep.SimpleServices | dosymep.SimpleServices",
    "keywords": "dosymep.SimpleServices Данный пакет содержит базовые интерфейсы сервисов."
  }
}